name: 'CI Main'

on:
  push:
    branches: [ 'main' ]

jobs:
  static_secrets:
    runs-on: ubuntu-latest
    name: Fetch static secrets
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch static secrets from AKeyless
      id: fetch-static-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        static-secrets: '{"/DevTools/my-static-secret":"my_static_secret"}'
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        
    - name: Verify static secrets output
      run: |
        echo "[static] Your output secret is ${{ steps.fetch-static-secrets.my_static_secret }}"
        echo "[static] Your environment secret is ${{ env.my_static_secret }}"

  dynamic_secrets:
    runs-on: ubuntu-latest
    name: Fetch dynamic secrets (default setup)
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch SQL dynamic secrets from AKeyless
      id: fetch-dynamic-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":"my_dynamic_secret"}'
        
    - name: Verify Fetch Job Environment Variables
      run: echo "[Env Var] Your environment secret is ${{ env.my_dynamic_secret }}"

    - name: Verify Fetch Job Outputs
      run: echo "[Job Output] Your output secret is ${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}"

    - name: Bonus - Parse secrets into Environment variables
      run: |
        echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
        echo "id = ${{ env.id }}"
        echo "user = ${{ env.user }}"
        echo "password = ${{ env.password }}"
        echo "ttl_in_minutes = ${{ env.ttl_in_minutes }}"
        
  dynamic_secrets-parsed_no_prefix:
    runs-on: ubuntu-latest
    name: Fetch dynamic secrets
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch dynamic secrets from AKeyless (NO PREFIX)
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":""}' # empty output variable name for no-prefix
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        separate-dynamic-secrets: true # to separate the secrets
        
    - name: Verify Separate Environment Varables
      run: |
        echo "ID: ${{ env.id }}"
        echo "USER: ${{ env.user }}"
        echo "TTL_IN_MINUTES: ${{ env.ttl_in_minutes }}"
        echo "PASSWORD: ${{ env.password }}"

    - name: Verify Outputs
      run: |
        echo "ID: ${{ steps.fetch-secrets.outputs.id }}" 
        echo "USER: ${{ steps.fetch-secrets.outputs.user }}" 
        echo "TTL_IN_MINUTES: ${{ steps.fetch-secrets.outputs.ttl_in_minutes }}" 
        echo "PASSWORD: ${{ steps.fetch-secrets.outputs.password }}"

  dynamic_secrets-separate_with_prefix:
    runs-on: ubuntu-latest
    name: Fetch SQL dynamic secrets
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch dynamic secrets from AKeyless ('SQL' PREFIX)
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":"SQL"}' # out variable name becomes a prefix
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        separate-dynamic-secrets: true # to separate the secrets
        
    - name: Verify Separated Environment Varables
      run: |
        echo "ID: ${{ env.SQL_id }}"
        echo "USER: ${{ env.SQL_user }}"
        echo "TTL_IN_MINUTES: ${{ env.SQL_ttl_in_minutes }}"
        echo "PASSWORD: ${{ env.SQL_password }}"

    - name: Verify Separated Outputs
      run: |
        echo "ID: ${{ steps.fetch-secrets.outputs.SQL_id }}" 
        echo "USER: ${{ steps.fetch-secrets.outputs.SQL_user }}" 
        echo "TTL_IN_MINUTES: ${{ steps.fetch-secrets.outputs.SQL_ttl_in_minutes }}" 
        echo "PASSWORD: ${{ steps.fetch-secrets.outputs.SQL_password }}"