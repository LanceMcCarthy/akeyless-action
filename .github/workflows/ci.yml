name: 'CI Main'

on:
  push:
    branches: [ 'main' ]

jobs:
  static_secrets:
    runs-on: ubuntu-latest
    name: Fetch static secrets
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch static secrets from AKeyless
      id: fetch-static-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        static-secrets: '{"/DevTools/my-static-secret":"my_static_secret"}'
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        
    - name: Verify static secrets output
      run: |
        echo "[static] Your output secret is ${{ steps.fetch-static-secrets.my_static_secret }}"
        echo "[static] Your environment secret is ${{ env.my_static_secret }}"

  dynamic_secrets:
    runs-on: ubuntu-latest
    name: Fetch SQL dynamic secrets
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch dynamic secrets from AKeyless
      id: fetch-dynamic-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":"my_dynamic_secret"}'
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        
    - name: Verify Fetch Job Environment Variables
      run: |
        # echo "[Env Var] Your environment secret is ${{ env.my_dynamic_secret }}"
        echo "ID:"
        echo '${{ env.my_dynamic_secret }}' | jq '.id'
        echo "USER:"
        echo '${{ env.my_dynamic_secret }}' | jq '.user'
        echo "TTL_IN_MINUTES:"
        echo '${{ env.my_dynamic_secret }}' | jq '.ttl_in_minutes'
        echo "PASSWORD:"
        echo '${{ env.my_dynamic_secret }}' | jq '.password'

    - name: Verify Fetch Job Outputs
      run: |
        #echo "[Job Output] Your output secret is ${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}"
        echo "ID:" 
        echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq '.id'
        echo "USER:" 
        echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq '.user'
        echo "TTL_IN_MINUTES:" 
        echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq '.ttl_in_minutes'
        echo "PASSWORD:"
        echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq '.password'

    - name: EXTRA A - Export Job Outputs to Separate GitHub Runner Env Vars
      run: echo '${{ steps.fetch-dynamic-secrets.outputs.my_dynamic_secret }}' | jq -r 'to_entries|map("AKEYLESS_\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
    
    - name: EXTRA B - Confirm GitHub Runner Env Vars
      run: |
        echo "AKEYLESS_id = ${{ env.AKEYLESS_id }}"
        echo "AKEYLESS_user = ${{ env.AKEYLESS_user }}"
        echo "AKEYLESS_password = ${{ env.AKEYLESS_password }}"
        echo "AKEYLESS_ttl_in_minutes = ${{ env.AKEYLESS_ttl_in_minutes }}"

# to be uncommented once Feature 11 is merged
  # dynamic_secrets-separate_without_prefix:
  #   runs-on: ubuntu-latest
  #   name: Fetch AWS dynamic secrets
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Fetch dynamic secrets from AKeyless (NO PREFIX)
  #     id: fetch-secrets
  #     uses: ./
  #     with:
  #       access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
  #       dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":""}' # empty output variable name for no-prefix
  #       export-secrets-to-outputs: true
  #       export-secrets-to-environment: true
  #       separate-dynamic-secrets: true # to separate the secrets
        
  #   - name: Verify Separate Environment Varables
  #     run: |
  #       echo "ID: ${{ env.id }}"
  #       echo "USER: ${{ env.user }}"
  #       echo "TTL_IN_MINUTES: ${{ env.ttl_in_minutes }}"
  #       echo "PASSWORD: ${{ env.password }}"

  #   - name: Verify Outputs
  #     run: |
  #       echo "ID: ${{ steps.fetch-secrets.outputs.id }}" 
  #       echo "USER: ${{ steps.fetch-secrets.outputs.user }}" 
  #       echo "TTL_IN_MINUTES: ${{ steps.fetch-secrets.outputs.ttl_in_minutes }}" 
  #       echo "PASSWORD: ${{ steps.fetch-secrets.outputs.password }}"

  # dynamic_secrets-separate_with_prefix:
  #   runs-on: ubuntu-latest
  #   name: Fetch SQL dynamic secrets
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Fetch dynamic secrets from AKeyless ('SQL' PREFIX)
  #     id: fetch-secrets
  #     uses: ./
  #     with:
  #       access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
  #       dynamic-secrets: '{"/DevTools/az-sqlsrvsecret":"SQL"}' # out variable name becomes a prefix
  #       export-secrets-to-outputs: true
  #       export-secrets-to-environment: true
  #       separate-dynamic-secrets: true # to separate the secrets
        
  #   - name: Verify Separated Environment Varables
  #     run: |
  #       echo "ID: ${{ env.SQL_id }}"
  #       echo "USER: ${{ env.SQL_user }}"
  #       echo "TTL_IN_MINUTES: ${{ env.SQL_ttl_in_minutes }}"
  #       echo "PASSWORD: ${{ env.SQL_password }}"

  #   - name: Verify Separated Outputs
  #     run: |
  #       echo "ID: ${{ steps.fetch-secrets.outputs.SQL_id }}" 
  #       echo "USER: ${{ steps.fetch-secrets.outputs.SQL_user }}" 
  #       echo "TTL_IN_MINUTES: ${{ steps.fetch-secrets.outputs.SQL_ttl_in_minutes }}" 
  #       echo "PASSWORD: ${{ steps.fetch-secrets.outputs.SQL_password }}"