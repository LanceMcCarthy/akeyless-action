name: 'Azure Code Sign'
# Docs => https://docs.akeyless.io/docs/azure-ad-dynamic-secrets
# Using AzureSignTool https://learn.microsoft.com/en-us/windows/msix/desktop/cicd-keyvault

on:
  workflow_dispatch:

jobs:
  code_sign:
    runs-on: windows-latest
    name: Code Signing
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch dynamic secret from Akleyless
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        dynamic-secrets: '{"/DevTools/live-azure-ad":"azure_ad_dynamic_secret"}'

    - name: Learn keys
      run: |
       echo '${{ steps.fetch-secrets.outputs.azure_ad_dynamic_secret }}' | jq -r 'keys[]'
       Write-Output '${{ steps.fetch-secrets.outputs.azure_ad_dynamic_secret }}'
       echo '${{ steps.fetch-secrets.outputs.azure_ad_dynamic_secret }}' | jq -r '.secret as $n | try to_entries[] | [ $n, .value]'
       echo '${{ steps.fetch-secrets.outputs.azure_ad_dynamic_secret }}' | jq -r '.secret[] try to_entries[] | [ $n, .value] | '


    #### Option 1 ####
    # The easiest, just use AzureSignTool

    # - name: Install AzureSignTool
    #   id: install-signtool
    #   run: dotnet tool install --global AzureSignTool 

    #   # Nice walkthrough https://melatonin.dev/blog/how-to-code-sign-windows-installers-with-an-ev-cert-on-github-actions/
    # - name: Use AzureSignTool
    #   id: use-signtool
    #   run: |
    #     azuresigntool sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}"-kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ secrets.AZURE_CERT_NAME }} -tr http://timestamp.digicert.com -v '/src/index.js'


    #### Option 2 ####
    # Using azure/login@v1 and azure/CLI@v1

    # https://github.com/Azure/login
    # https://github.com/Azure/cli
    # - name: Azure Login
    #   id: azure-cli-login
    #   uses: azure/login@v1
    #   with:
    #        # JSON object with all values https://github.com/Azure/cli#configure-azure-credentials-as-github-secret
    #       creds: ${{ secrets.AZURE_CREDENTIALS }} 
    #        # OR individually set values
    #       client-id: ${{ secrets.AZ_CLIENT_ID }}
    #       tenant-id: ${{ secrets.AZ_TENANT_ID }}
    #       subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
    
    # - name: Azure CLI script
    #   id: azure-cli-fetch-secret
    #   uses: azure/CLI@v1
    #   with:
    #     inlineScript: |
    #       echo az_secret=$(az keyvault secret show --vault-name MyPrimaryKeyVault --name MYTELERIKACCOUNTUSERNAME --query value --out tsv) >> $GITHUB_ENV
    
    # - name: Verify Result
    #   id: verify-result
    #   run: |
    #     echo "${{ env.az_secret }}"


    #### Option 3 ####
    # If you're lucky enough to have Azure Code Signing service, this is a one-shot operation

    # - name: Sign files with Azure Code Signing
    #   uses: azure/azure-code-signing-action@v0.2.15
    #   with:
    #     azure-tenant-id: ${{ env.AZ_TENANT_ID }}
    #     azure-client-id: ${{ env.AZ_CLIENT_ID }}
    #     azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
    #     endpoint: https://wus2.codesigning.azure.net/
    #     code-signing-account-name: vscx-codesigning
    #     certificate-profile-name: vscx-certificate-profile
    #     files-folder: ${{ github.workspace }}\src\index.js
    #     files-folder-filter: js
    #     file-digest: SHA256
    #     timestamp-rfc3161: http://timestamp.acs.microsoft.com
    #     timestamp-digest: SHA256