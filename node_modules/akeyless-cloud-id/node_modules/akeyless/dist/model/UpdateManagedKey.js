"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The UpdateManagedKey model module.
 * @module model/UpdateManagedKey
 * @version 2.4.0
 */
var UpdateManagedKey = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>UpdateManagedKey</code>.
   * @alias module:model/UpdateManagedKey
   * @param name {String} ManagedKey name
   */
  function UpdateManagedKey(name) {
    _classCallCheck(this, UpdateManagedKey);

    UpdateManagedKey.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(UpdateManagedKey, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['name'] = name;
    }
    /**
     * Constructs a <code>UpdateManagedKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateManagedKey} obj Optional instance to populate.
     * @return {module:model/UpdateManagedKey} The populated <code>UpdateManagedKey</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new UpdateManagedKey();

        if (data.hasOwnProperty('add-tag')) {
          obj['add-tag'] = _ApiClient["default"].convertToType(data['add-tag'], ['String']);
        }

        if (data.hasOwnProperty('auto-rotate')) {
          obj['auto-rotate'] = _ApiClient["default"].convertToType(data['auto-rotate'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-metadata')) {
          obj['new-metadata'] = _ApiClient["default"].convertToType(data['new-metadata'], 'String');
        }

        if (data.hasOwnProperty('new-name')) {
          obj['new-name'] = _ApiClient["default"].convertToType(data['new-name'], 'String');
        }

        if (data.hasOwnProperty('rm-tag')) {
          obj['rm-tag'] = _ApiClient["default"].convertToType(data['rm-tag'], ['String']);
        }

        if (data.hasOwnProperty('rotation-interval')) {
          obj['rotation-interval'] = _ApiClient["default"].convertToType(data['rotation-interval'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('update-url')) {
          obj['update-url'] = _ApiClient["default"].convertToType(data['update-url'], 'String');
        }
      }

      return obj;
    }
  }]);

  return UpdateManagedKey;
}();
/**
 * List of the new tags that will be attached to this item
 * @member {Array.<String>} add-tag
 */


UpdateManagedKey.prototype['add-tag'] = undefined;
/**
 * Whether to automatically rotate every --rotation-interval days, or disable existing automatic rotation
 * @member {String} auto-rotate
 */

UpdateManagedKey.prototype['auto-rotate'] = undefined;
/**
 * ManagedKey name
 * @member {String} name
 */

UpdateManagedKey.prototype['name'] = undefined;
/**
 * New item metadata
 * @member {String} new-metadata
 * @default 'default_metadata'
 */

UpdateManagedKey.prototype['new-metadata'] = 'default_metadata';
/**
 * New managed key name
 * @member {String} new-name
 */

UpdateManagedKey.prototype['new-name'] = undefined;
/**
 * List of the existent tags that will be removed from this item
 * @member {Array.<String>} rm-tag
 */

UpdateManagedKey.prototype['rm-tag'] = undefined;
/**
 * The number of days to wait between every automatic key rotation (7-365)
 * @member {String} rotation-interval
 */

UpdateManagedKey.prototype['rotation-interval'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

UpdateManagedKey.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

UpdateManagedKey.prototype['uid-token'] = undefined;
/**
 * Gateway url
 * @member {String} update-url
 * @default 'http://localhost:8000'
 */

UpdateManagedKey.prototype['update-url'] = 'http://localhost:8000';
var _default = UpdateManagedKey;
exports["default"] = _default;