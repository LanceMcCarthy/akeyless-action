"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GetLastUserEventStatus model module.
 * @module model/GetLastUserEventStatus
 * @version 3.5.1
 */
var GetLastUserEventStatus = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GetLastUserEventStatus</code>.
   * @alias module:model/GetLastUserEventStatus
   * @param eventType {String} 
   * @param itemName {String} Event item name
   * @param itemType {String} Event item type can be either \"target\" or type of item eg \"static_secret\"/\"dynamic_secret\" To get type of some item run `akeyless describe-item -n {ITEM_NAME} --jq-expression .item_type`
   */
  function GetLastUserEventStatus(eventType, itemName, itemType) {
    _classCallCheck(this, GetLastUserEventStatus);

    GetLastUserEventStatus.initialize(this, eventType, itemName, itemType);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GetLastUserEventStatus, null, [{
    key: "initialize",
    value: function initialize(obj, eventType, itemName, itemType) {
      obj['event-type'] = eventType;
      obj['item-name'] = itemName;
      obj['item-type'] = itemType;
    }
    /**
     * Constructs a <code>GetLastUserEventStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetLastUserEventStatus} obj Optional instance to populate.
     * @return {module:model/GetLastUserEventStatus} The populated <code>GetLastUserEventStatus</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GetLastUserEventStatus();

        if (data.hasOwnProperty('event-source')) {
          obj['event-source'] = _ApiClient["default"].convertToType(data['event-source'], 'String');
        }

        if (data.hasOwnProperty('event-type')) {
          obj['event-type'] = _ApiClient["default"].convertToType(data['event-type'], 'String');
        }

        if (data.hasOwnProperty('item-name')) {
          obj['item-name'] = _ApiClient["default"].convertToType(data['item-name'], 'String');
        }

        if (data.hasOwnProperty('item-type')) {
          obj['item-type'] = _ApiClient["default"].convertToType(data['item-type'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('time-back')) {
          obj['time-back'] = _ApiClient["default"].convertToType(data['time-back'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GetLastUserEventStatus;
}();
/**
 * @member {String} event-source
 */


GetLastUserEventStatus.prototype['event-source'] = undefined;
/**
 * @member {String} event-type
 */

GetLastUserEventStatus.prototype['event-type'] = undefined;
/**
 * Event item name
 * @member {String} item-name
 */

GetLastUserEventStatus.prototype['item-name'] = undefined;
/**
 * Event item type can be either \"target\" or type of item eg \"static_secret\"/\"dynamic_secret\" To get type of some item run `akeyless describe-item -n {ITEM_NAME} --jq-expression .item_type`
 * @member {String} item-type
 */

GetLastUserEventStatus.prototype['item-type'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GetLastUserEventStatus.prototype['json'] = false;
/**
 * The time back to search the event, for example if the value is \"5m\" we will return the last user event issued in the last 5 minutes. By default, we will search without any time boundary.
 * @member {String} time-back
 */

GetLastUserEventStatus.prototype['time-back'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GetLastUserEventStatus.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GetLastUserEventStatus.prototype['uid-token'] = undefined;
var _default = GetLastUserEventStatus;
exports["default"] = _default;