"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayUpdateProducerPing model module.
 * @module model/GatewayUpdateProducerPing
 * @version 5.0.6
 */
var GatewayUpdateProducerPing = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayUpdateProducerPing</code>.
   * gatewayUpdateProducerPing is a command that updates Ping producer [Deprecated: Use dynamic-secret-update-ping command]
   * @alias module:model/GatewayUpdateProducerPing
   * @param name {String} Dynamic secret name
   */
  function GatewayUpdateProducerPing(name) {
    _classCallCheck(this, GatewayUpdateProducerPing);

    GatewayUpdateProducerPing.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayUpdateProducerPing, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['json'] = false;
      obj['name'] = name;
      obj['ping-administrative-port'] = '9999';
      obj['ping-authorization-port'] = '9031';
      obj['ping-client-authentication-type'] = 'CLIENT_SECRET';
      obj['ping-enforce-replay-prevention'] = 'false';
      obj['user-ttl'] = '60m';
    }
    /**
     * Constructs a <code>GatewayUpdateProducerPing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayUpdateProducerPing} obj Optional instance to populate.
     * @return {module:model/GatewayUpdateProducerPing} The populated <code>GatewayUpdateProducerPing</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayUpdateProducerPing();

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-name')) {
          obj['new-name'] = _ApiClient["default"].convertToType(data['new-name'], 'String');
        }

        if (data.hasOwnProperty('ping-administrative-port')) {
          obj['ping-administrative-port'] = _ApiClient["default"].convertToType(data['ping-administrative-port'], 'String');
        }

        if (data.hasOwnProperty('ping-atm-id')) {
          obj['ping-atm-id'] = _ApiClient["default"].convertToType(data['ping-atm-id'], 'String');
        }

        if (data.hasOwnProperty('ping-authorization-port')) {
          obj['ping-authorization-port'] = _ApiClient["default"].convertToType(data['ping-authorization-port'], 'String');
        }

        if (data.hasOwnProperty('ping-cert-subject-dn')) {
          obj['ping-cert-subject-dn'] = _ApiClient["default"].convertToType(data['ping-cert-subject-dn'], 'String');
        }

        if (data.hasOwnProperty('ping-client-authentication-type')) {
          obj['ping-client-authentication-type'] = _ApiClient["default"].convertToType(data['ping-client-authentication-type'], 'String');
        }

        if (data.hasOwnProperty('ping-enforce-replay-prevention')) {
          obj['ping-enforce-replay-prevention'] = _ApiClient["default"].convertToType(data['ping-enforce-replay-prevention'], 'String');
        }

        if (data.hasOwnProperty('ping-grant-types')) {
          obj['ping-grant-types'] = _ApiClient["default"].convertToType(data['ping-grant-types'], ['String']);
        }

        if (data.hasOwnProperty('ping-issuer-dn')) {
          obj['ping-issuer-dn'] = _ApiClient["default"].convertToType(data['ping-issuer-dn'], 'String');
        }

        if (data.hasOwnProperty('ping-jwks')) {
          obj['ping-jwks'] = _ApiClient["default"].convertToType(data['ping-jwks'], 'String');
        }

        if (data.hasOwnProperty('ping-jwks-url')) {
          obj['ping-jwks-url'] = _ApiClient["default"].convertToType(data['ping-jwks-url'], 'String');
        }

        if (data.hasOwnProperty('ping-password')) {
          obj['ping-password'] = _ApiClient["default"].convertToType(data['ping-password'], 'String');
        }

        if (data.hasOwnProperty('ping-privileged-user')) {
          obj['ping-privileged-user'] = _ApiClient["default"].convertToType(data['ping-privileged-user'], 'String');
        }

        if (data.hasOwnProperty('ping-redirect-uris')) {
          obj['ping-redirect-uris'] = _ApiClient["default"].convertToType(data['ping-redirect-uris'], ['String']);
        }

        if (data.hasOwnProperty('ping-restricted-scopes')) {
          obj['ping-restricted-scopes'] = _ApiClient["default"].convertToType(data['ping-restricted-scopes'], ['String']);
        }

        if (data.hasOwnProperty('ping-signing-algo')) {
          obj['ping-signing-algo'] = _ApiClient["default"].convertToType(data['ping-signing-algo'], 'String');
        }

        if (data.hasOwnProperty('ping-url')) {
          obj['ping-url'] = _ApiClient["default"].convertToType(data['ping-url'], 'String');
        }

        if (data.hasOwnProperty('producer-encryption-key-name')) {
          obj['producer-encryption-key-name'] = _ApiClient["default"].convertToType(data['producer-encryption-key-name'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('user-ttl')) {
          obj['user-ttl'] = _ApiClient["default"].convertToType(data['user-ttl'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>GatewayUpdateProducerPing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GatewayUpdateProducerPing</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(GatewayUpdateProducerPing.RequiredProperties),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;

          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        } // ensure the json data is a string

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (data['delete_protection'] && !(typeof data['delete_protection'] === 'string' || data['delete_protection'] instanceof String)) {
        throw new Error("Expected the field `delete_protection` to be a primitive type in the JSON string but got " + data['delete_protection']);
      } // ensure the json data is a string


      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      } // ensure the json data is a string


      if (data['new-name'] && !(typeof data['new-name'] === 'string' || data['new-name'] instanceof String)) {
        throw new Error("Expected the field `new-name` to be a primitive type in the JSON string but got " + data['new-name']);
      } // ensure the json data is a string


      if (data['ping-administrative-port'] && !(typeof data['ping-administrative-port'] === 'string' || data['ping-administrative-port'] instanceof String)) {
        throw new Error("Expected the field `ping-administrative-port` to be a primitive type in the JSON string but got " + data['ping-administrative-port']);
      } // ensure the json data is a string


      if (data['ping-atm-id'] && !(typeof data['ping-atm-id'] === 'string' || data['ping-atm-id'] instanceof String)) {
        throw new Error("Expected the field `ping-atm-id` to be a primitive type in the JSON string but got " + data['ping-atm-id']);
      } // ensure the json data is a string


      if (data['ping-authorization-port'] && !(typeof data['ping-authorization-port'] === 'string' || data['ping-authorization-port'] instanceof String)) {
        throw new Error("Expected the field `ping-authorization-port` to be a primitive type in the JSON string but got " + data['ping-authorization-port']);
      } // ensure the json data is a string


      if (data['ping-cert-subject-dn'] && !(typeof data['ping-cert-subject-dn'] === 'string' || data['ping-cert-subject-dn'] instanceof String)) {
        throw new Error("Expected the field `ping-cert-subject-dn` to be a primitive type in the JSON string but got " + data['ping-cert-subject-dn']);
      } // ensure the json data is a string


      if (data['ping-client-authentication-type'] && !(typeof data['ping-client-authentication-type'] === 'string' || data['ping-client-authentication-type'] instanceof String)) {
        throw new Error("Expected the field `ping-client-authentication-type` to be a primitive type in the JSON string but got " + data['ping-client-authentication-type']);
      } // ensure the json data is a string


      if (data['ping-enforce-replay-prevention'] && !(typeof data['ping-enforce-replay-prevention'] === 'string' || data['ping-enforce-replay-prevention'] instanceof String)) {
        throw new Error("Expected the field `ping-enforce-replay-prevention` to be a primitive type in the JSON string but got " + data['ping-enforce-replay-prevention']);
      } // ensure the json data is an array


      if (!Array.isArray(data['ping-grant-types'])) {
        throw new Error("Expected the field `ping-grant-types` to be an array in the JSON data but got " + data['ping-grant-types']);
      } // ensure the json data is a string


      if (data['ping-issuer-dn'] && !(typeof data['ping-issuer-dn'] === 'string' || data['ping-issuer-dn'] instanceof String)) {
        throw new Error("Expected the field `ping-issuer-dn` to be a primitive type in the JSON string but got " + data['ping-issuer-dn']);
      } // ensure the json data is a string


      if (data['ping-jwks'] && !(typeof data['ping-jwks'] === 'string' || data['ping-jwks'] instanceof String)) {
        throw new Error("Expected the field `ping-jwks` to be a primitive type in the JSON string but got " + data['ping-jwks']);
      } // ensure the json data is a string


      if (data['ping-jwks-url'] && !(typeof data['ping-jwks-url'] === 'string' || data['ping-jwks-url'] instanceof String)) {
        throw new Error("Expected the field `ping-jwks-url` to be a primitive type in the JSON string but got " + data['ping-jwks-url']);
      } // ensure the json data is a string


      if (data['ping-password'] && !(typeof data['ping-password'] === 'string' || data['ping-password'] instanceof String)) {
        throw new Error("Expected the field `ping-password` to be a primitive type in the JSON string but got " + data['ping-password']);
      } // ensure the json data is a string


      if (data['ping-privileged-user'] && !(typeof data['ping-privileged-user'] === 'string' || data['ping-privileged-user'] instanceof String)) {
        throw new Error("Expected the field `ping-privileged-user` to be a primitive type in the JSON string but got " + data['ping-privileged-user']);
      } // ensure the json data is an array


      if (!Array.isArray(data['ping-redirect-uris'])) {
        throw new Error("Expected the field `ping-redirect-uris` to be an array in the JSON data but got " + data['ping-redirect-uris']);
      } // ensure the json data is an array


      if (!Array.isArray(data['ping-restricted-scopes'])) {
        throw new Error("Expected the field `ping-restricted-scopes` to be an array in the JSON data but got " + data['ping-restricted-scopes']);
      } // ensure the json data is a string


      if (data['ping-signing-algo'] && !(typeof data['ping-signing-algo'] === 'string' || data['ping-signing-algo'] instanceof String)) {
        throw new Error("Expected the field `ping-signing-algo` to be a primitive type in the JSON string but got " + data['ping-signing-algo']);
      } // ensure the json data is a string


      if (data['ping-url'] && !(typeof data['ping-url'] === 'string' || data['ping-url'] instanceof String)) {
        throw new Error("Expected the field `ping-url` to be a primitive type in the JSON string but got " + data['ping-url']);
      } // ensure the json data is a string


      if (data['producer-encryption-key-name'] && !(typeof data['producer-encryption-key-name'] === 'string' || data['producer-encryption-key-name'] instanceof String)) {
        throw new Error("Expected the field `producer-encryption-key-name` to be a primitive type in the JSON string but got " + data['producer-encryption-key-name']);
      } // ensure the json data is an array


      if (!Array.isArray(data['tags'])) {
        throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
      } // ensure the json data is a string


      if (data['target-name'] && !(typeof data['target-name'] === 'string' || data['target-name'] instanceof String)) {
        throw new Error("Expected the field `target-name` to be a primitive type in the JSON string but got " + data['target-name']);
      } // ensure the json data is a string


      if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
        throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
      } // ensure the json data is a string


      if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
        throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
      } // ensure the json data is a string


      if (data['user-ttl'] && !(typeof data['user-ttl'] === 'string' || data['user-ttl'] instanceof String)) {
        throw new Error("Expected the field `user-ttl` to be a primitive type in the JSON string but got " + data['user-ttl']);
      }

      return true;
    }
  }]);

  return GatewayUpdateProducerPing;
}();

GatewayUpdateProducerPing.RequiredProperties = ["name"];
/**
 * Protection from accidental deletion of this object [true/false]
 * @member {String} delete_protection
 */

GatewayUpdateProducerPing.prototype['delete_protection'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayUpdateProducerPing.prototype['json'] = false;
/**
 * Dynamic secret name
 * @member {String} name
 */

GatewayUpdateProducerPing.prototype['name'] = undefined;
/**
 * Dynamic secret New name
 * @member {String} new-name
 */

GatewayUpdateProducerPing.prototype['new-name'] = undefined;
/**
 * Ping Federate administrative port
 * @member {String} ping-administrative-port
 * @default '9999'
 */

GatewayUpdateProducerPing.prototype['ping-administrative-port'] = '9999';
/**
 * Set a specific Access Token Management (ATM) instance for the created OAuth Client by providing the ATM Id. If no explicit value is given, the default pingfederate server ATM will be set.
 * @member {String} ping-atm-id
 */

GatewayUpdateProducerPing.prototype['ping-atm-id'] = undefined;
/**
 * Ping Federate authorization port
 * @member {String} ping-authorization-port
 * @default '9031'
 */

GatewayUpdateProducerPing.prototype['ping-authorization-port'] = '9031';
/**
 * The subject DN of the client certificate. If no explicit value is given, the producer will create CA certificate and matched client certificate and return it as value. Used in conjunction with ping-issuer-dn (relevant for CLIENT_TLS_CERTIFICATE authentication method)
 * @member {String} ping-cert-subject-dn
 */

GatewayUpdateProducerPing.prototype['ping-cert-subject-dn'] = undefined;
/**
 * OAuth Client Authentication Type [CLIENT_SECRET, PRIVATE_KEY_JWT, CLIENT_TLS_CERTIFICATE]
 * @member {String} ping-client-authentication-type
 * @default 'CLIENT_SECRET'
 */

GatewayUpdateProducerPing.prototype['ping-client-authentication-type'] = 'CLIENT_SECRET';
/**
 * Determines whether PingFederate requires a unique signed JWT from the client for each action (relevant for PRIVATE_KEY_JWT authentication method) [true/false]
 * @member {String} ping-enforce-replay-prevention
 * @default 'false'
 */

GatewayUpdateProducerPing.prototype['ping-enforce-replay-prevention'] = 'false';
/**
 * List of OAuth client grant types [IMPLICIT, AUTHORIZATION_CODE, CLIENT_CREDENTIALS, TOKEN_EXCHANGE, REFRESH_TOKEN, ASSERTION_GRANTS, PASSWORD, RESOURCE_OWNER_CREDENTIALS]. If no explicit value is given, AUTHORIZATION_CODE will be selected as default.
 * @member {Array.<String>} ping-grant-types
 */

GatewayUpdateProducerPing.prototype['ping-grant-types'] = undefined;
/**
 * Issuer DN of trusted CA certificate that imported into Ping Federate server. You may select \\\"Trust Any\\\" to trust all the existing issuers in Ping Federate server. Used in conjunction with ping-cert-subject-dn (relevant for CLIENT_TLS_CERTIFICATE authentication method)
 * @member {String} ping-issuer-dn
 */

GatewayUpdateProducerPing.prototype['ping-issuer-dn'] = undefined;
/**
 * Base64-encoded JSON Web Key Set (JWKS). If no explicit value is given, the producer will create JWKs and matched signed JWT (Sign Algo: RS256) and return it as value (relevant for PRIVATE_KEY_JWT authentication method)
 * @member {String} ping-jwks
 */

GatewayUpdateProducerPing.prototype['ping-jwks'] = undefined;
/**
 * The URL of the JSON Web Key Set (JWKS). If no explicit value is given, the producer will create JWKs and matched signed JWT and return it as value (relevant for PRIVATE_KEY_JWT authentication method)
 * @member {String} ping-jwks-url
 */

GatewayUpdateProducerPing.prototype['ping-jwks-url'] = undefined;
/**
 * Ping Federate privileged user password
 * @member {String} ping-password
 */

GatewayUpdateProducerPing.prototype['ping-password'] = undefined;
/**
 * Ping Federate privileged user
 * @member {String} ping-privileged-user
 */

GatewayUpdateProducerPing.prototype['ping-privileged-user'] = undefined;
/**
 * List of URIs to which the OAuth authorization server may redirect the resource owner's user agent after authorization is obtained. At least one redirection URI is required for the AUTHORIZATION_CODE and IMPLICIT grant types.
 * @member {Array.<String>} ping-redirect-uris
 */

GatewayUpdateProducerPing.prototype['ping-redirect-uris'] = undefined;
/**
 * Limit the OAuth client to specific scopes list
 * @member {Array.<String>} ping-restricted-scopes
 */

GatewayUpdateProducerPing.prototype['ping-restricted-scopes'] = undefined;
/**
 * The signing algorithm that the client must use to sign its request objects [RS256,RS384,RS512,ES256,ES384,ES512,PS256,PS384,PS512] If no explicit value is given, the client can use any of the supported signing algorithms (relevant for PRIVATE_KEY_JWT authentication method)
 * @member {String} ping-signing-algo
 */

GatewayUpdateProducerPing.prototype['ping-signing-algo'] = undefined;
/**
 * Ping URL
 * @member {String} ping-url
 */

GatewayUpdateProducerPing.prototype['ping-url'] = undefined;
/**
 * Dynamic producer encryption key
 * @member {String} producer-encryption-key-name
 */

GatewayUpdateProducerPing.prototype['producer-encryption-key-name'] = undefined;
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

GatewayUpdateProducerPing.prototype['tags'] = undefined;
/**
 * Target name
 * @member {String} target-name
 */

GatewayUpdateProducerPing.prototype['target-name'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayUpdateProducerPing.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayUpdateProducerPing.prototype['uid-token'] = undefined;
/**
 * The time from dynamic secret creation to expiration.
 * @member {String} user-ttl
 * @default '60m'
 */

GatewayUpdateProducerPing.prototype['user-ttl'] = '60m';
var _default = GatewayUpdateProducerPing;
exports["default"] = _default;