"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayPartialUpdateK8SAuthConfig model module.
 * @module model/GatewayPartialUpdateK8SAuthConfig
 * @version 4.3.0
 */
var GatewayPartialUpdateK8SAuthConfig = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayPartialUpdateK8SAuthConfig</code>.
   * @alias module:model/GatewayPartialUpdateK8SAuthConfig
   */
  function GatewayPartialUpdateK8SAuthConfig() {
    _classCallCheck(this, GatewayPartialUpdateK8SAuthConfig);

    GatewayPartialUpdateK8SAuthConfig.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayPartialUpdateK8SAuthConfig, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>GatewayPartialUpdateK8SAuthConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayPartialUpdateK8SAuthConfig} obj Optional instance to populate.
     * @return {module:model/GatewayPartialUpdateK8SAuthConfig} The populated <code>GatewayPartialUpdateK8SAuthConfig</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayPartialUpdateK8SAuthConfig();

        if (data.hasOwnProperty('UseDefaultIdentityBool')) {
          obj['UseDefaultIdentityBool'] = _ApiClient["default"].convertToType(data['UseDefaultIdentityBool'], 'Boolean');
        }

        if (data.hasOwnProperty('access-id')) {
          obj['access-id'] = _ApiClient["default"].convertToType(data['access-id'], 'String');
        }

        if (data.hasOwnProperty('disable-issuer-validation')) {
          obj['disable-issuer-validation'] = _ApiClient["default"].convertToType(data['disable-issuer-validation'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('k8s-auth-type')) {
          obj['k8s-auth-type'] = _ApiClient["default"].convertToType(data['k8s-auth-type'], 'String');
        }

        if (data.hasOwnProperty('k8s-ca-cert')) {
          obj['k8s-ca-cert'] = _ApiClient["default"].convertToType(data['k8s-ca-cert'], 'String');
        }

        if (data.hasOwnProperty('k8s-client-certificate')) {
          obj['k8s-client-certificate'] = _ApiClient["default"].convertToType(data['k8s-client-certificate'], 'String');
        }

        if (data.hasOwnProperty('k8s-client-key')) {
          obj['k8s-client-key'] = _ApiClient["default"].convertToType(data['k8s-client-key'], 'String');
        }

        if (data.hasOwnProperty('k8s-host')) {
          obj['k8s-host'] = _ApiClient["default"].convertToType(data['k8s-host'], 'String');
        }

        if (data.hasOwnProperty('k8s-issuer')) {
          obj['k8s-issuer'] = _ApiClient["default"].convertToType(data['k8s-issuer'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-name')) {
          obj['new-name'] = _ApiClient["default"].convertToType(data['new-name'], 'String');
        }

        if (data.hasOwnProperty('rancher-api-key')) {
          obj['rancher-api-key'] = _ApiClient["default"].convertToType(data['rancher-api-key'], 'String');
        }

        if (data.hasOwnProperty('rancher-cluster-id')) {
          obj['rancher-cluster-id'] = _ApiClient["default"].convertToType(data['rancher-cluster-id'], 'String');
        }

        if (data.hasOwnProperty('signing-key')) {
          obj['signing-key'] = _ApiClient["default"].convertToType(data['signing-key'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('token-exp')) {
          obj['token-exp'] = _ApiClient["default"].convertToType(data['token-exp'], 'Number');
        }

        if (data.hasOwnProperty('token-reviewer-jwt')) {
          obj['token-reviewer-jwt'] = _ApiClient["default"].convertToType(data['token-reviewer-jwt'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('use-gw-service-account')) {
          obj['use-gw-service-account'] = _ApiClient["default"].convertToType(data['use-gw-service-account'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayPartialUpdateK8SAuthConfig;
}();
/**
 * @member {Boolean} UseDefaultIdentityBool
 */


GatewayPartialUpdateK8SAuthConfig.prototype['UseDefaultIdentityBool'] = undefined;
/**
 * The access ID of the Kubernetes auth method
 * @member {String} access-id
 */

GatewayPartialUpdateK8SAuthConfig.prototype['access-id'] = undefined;
/**
 * Disable issuer validation [true/false]
 * @member {String} disable-issuer-validation
 */

GatewayPartialUpdateK8SAuthConfig.prototype['disable-issuer-validation'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayPartialUpdateK8SAuthConfig.prototype['json'] = false;
/**
 * K8S auth type [token/certificate]. (relevant for \"native_k8s\" only)
 * @member {String} k8s-auth-type
 * @default 'token'
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-auth-type'] = 'token';
/**
 * The CA Certificate (base64 encoded) to use to call into the kubernetes API server
 * @member {String} k8s-ca-cert
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-ca-cert'] = undefined;
/**
 * Content of the k8 client certificate (PEM format) in a Base64 format (relevant for \"native_k8s\" only)
 * @member {String} k8s-client-certificate
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-client-certificate'] = undefined;
/**
 * Content of the k8 client private key (PEM format) in a Base64 format (relevant for \"native_k8s\" only)
 * @member {String} k8s-client-key
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-client-key'] = undefined;
/**
 * The URL of the kubernetes API server
 * @member {String} k8s-host
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-host'] = undefined;
/**
 * The Kubernetes JWT issuer name. K8SIssuer is the claim that specifies who issued the Kubernetes token
 * @member {String} k8s-issuer
 */

GatewayPartialUpdateK8SAuthConfig.prototype['k8s-issuer'] = undefined;
/**
 * K8S Auth config name
 * @member {String} name
 */

GatewayPartialUpdateK8SAuthConfig.prototype['name'] = undefined;
/**
 * K8S Auth config new name
 * @member {String} new-name
 */

GatewayPartialUpdateK8SAuthConfig.prototype['new-name'] = undefined;
/**
 * The api key used to access the TokenReview API to validate other JWTs (relevant for \"rancher\" only)
 * @member {String} rancher-api-key
 */

GatewayPartialUpdateK8SAuthConfig.prototype['rancher-api-key'] = undefined;
/**
 * The cluster id as define in rancher (relevant for \"rancher\" only)
 * @member {String} rancher-cluster-id
 */

GatewayPartialUpdateK8SAuthConfig.prototype['rancher-cluster-id'] = undefined;
/**
 * The private key (base64 encoded) associated with the public key defined in the Kubernetes auth
 * @member {String} signing-key
 */

GatewayPartialUpdateK8SAuthConfig.prototype['signing-key'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayPartialUpdateK8SAuthConfig.prototype['token'] = undefined;
/**
 * Time in seconds of expiration of the Akeyless Kube Auth Method token
 * @member {Number} token-exp
 */

GatewayPartialUpdateK8SAuthConfig.prototype['token-exp'] = undefined;
/**
 * A Kubernetes service account JWT used to access the TokenReview API to validate other JWTs (relevant for \"native_k8s\" only). If not set, the JWT submitted in the authentication process will be used to access the Kubernetes TokenReview API.
 * @member {String} token-reviewer-jwt
 */

GatewayPartialUpdateK8SAuthConfig.prototype['token-reviewer-jwt'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayPartialUpdateK8SAuthConfig.prototype['uid-token'] = undefined;
/**
 * Use the GW's service account
 * @member {String} use-gw-service-account
 */

GatewayPartialUpdateK8SAuthConfig.prototype['use-gw-service-account'] = undefined;
var _default = GatewayPartialUpdateK8SAuthConfig;
exports["default"] = _default;