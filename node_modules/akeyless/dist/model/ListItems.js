"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ListItems model module.
 * @module model/ListItems
 * @version 4.1.0
 */
var ListItems = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ListItems</code>.
   * @alias module:model/ListItems
   */
  function ListItems() {
    _classCallCheck(this, ListItems);

    ListItems.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ListItems, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>ListItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListItems} obj Optional instance to populate.
     * @return {module:model/ListItems} The populated <code>ListItems</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ListItems();

        if (data.hasOwnProperty('accessibility')) {
          obj['accessibility'] = _ApiClient["default"].convertToType(data['accessibility'], 'String');
        }

        if (data.hasOwnProperty('advanced-filter')) {
          obj['advanced-filter'] = _ApiClient["default"].convertToType(data['advanced-filter'], 'String');
        }

        if (data.hasOwnProperty('auto-pagination')) {
          obj['auto-pagination'] = _ApiClient["default"].convertToType(data['auto-pagination'], 'String');
        }

        if (data.hasOwnProperty('filter')) {
          obj['filter'] = _ApiClient["default"].convertToType(data['filter'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('minimal-view')) {
          obj['minimal-view'] = _ApiClient["default"].convertToType(data['minimal-view'], 'Boolean');
        }

        if (data.hasOwnProperty('modified-after')) {
          obj['modified-after'] = _ApiClient["default"].convertToType(data['modified-after'], 'Number');
        }

        if (data.hasOwnProperty('pagination-token')) {
          obj['pagination-token'] = _ApiClient["default"].convertToType(data['pagination-token'], 'String');
        }

        if (data.hasOwnProperty('path')) {
          obj['path'] = _ApiClient["default"].convertToType(data['path'], 'String');
        }

        if (data.hasOwnProperty('sra-only')) {
          obj['sra-only'] = _ApiClient["default"].convertToType(data['sra-only'], 'Boolean');
        }

        if (data.hasOwnProperty('sub_types')) {
          obj['sub_types'] = _ApiClient["default"].convertToType(data['sub_types'], ['String']);
        }

        if (data.hasOwnProperty('tag')) {
          obj['tag'] = _ApiClient["default"].convertToType(data['tag'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], ['String']);
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return ListItems;
}();
/**
 * for personal password manager
 * @member {String} accessibility
 * @default 'regular'
 */


ListItems.prototype['accessibility'] = 'regular';
/**
 * Filter by item name/username/website or part of it
 * @member {String} advanced-filter
 */

ListItems.prototype['advanced-filter'] = undefined;
/**
 * Retrieve all items using pagination, when disabled retrieving only first 1000 items
 * @member {String} auto-pagination
 * @default 'enabled'
 */

ListItems.prototype['auto-pagination'] = 'enabled';
/**
 * Filter by item name or part of it
 * @member {String} filter
 */

ListItems.prototype['filter'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

ListItems.prototype['json'] = false;
/**
 * Show only basic information of the items
 * @member {Boolean} minimal-view
 */

ListItems.prototype['minimal-view'] = undefined;
/**
 * List only secrets modified after specified date (in unix time)
 * @member {Number} modified-after
 */

ListItems.prototype['modified-after'] = undefined;
/**
 * Next page reference
 * @member {String} pagination-token
 */

ListItems.prototype['pagination-token'] = undefined;
/**
 * Path to folder
 * @member {String} path
 */

ListItems.prototype['path'] = undefined;
/**
 * Filter by items with SRA functionality enabled
 * @member {Boolean} sra-only
 * @default false
 */

ListItems.prototype['sra-only'] = false;
/**
 * @member {Array.<String>} sub_types
 */

ListItems.prototype['sub_types'] = undefined;
/**
 * Filter by item tag
 * @member {String} tag
 */

ListItems.prototype['tag'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

ListItems.prototype['token'] = undefined;
/**
 * The item types list of the requested items. In case it is empty, all types of items will be returned. options: [key, static-secret, dynamic-secret, classic-key]
 * @member {Array.<String>} type
 */

ListItems.prototype['type'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

ListItems.prototype['uid-token'] = undefined;
var _default = ListItems;
exports["default"] = _default;