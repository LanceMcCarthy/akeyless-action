"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The SSHCertificateIssueDetails model module.
 * @module model/SSHCertificateIssueDetails
 * @version 5.0.1
 */
var SSHCertificateIssueDetails = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SSHCertificateIssueDetails</code>.
   * @alias module:model/SSHCertificateIssueDetails
   */
  function SSHCertificateIssueDetails() {
    _classCallCheck(this, SSHCertificateIssueDetails);

    SSHCertificateIssueDetails.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(SSHCertificateIssueDetails, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>SSHCertificateIssueDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SSHCertificateIssueDetails} obj Optional instance to populate.
     * @return {module:model/SSHCertificateIssueDetails} The populated <code>SSHCertificateIssueDetails</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SSHCertificateIssueDetails();

        if (data.hasOwnProperty('allowed_domains')) {
          obj['allowed_domains'] = _ApiClient["default"].convertToType(data['allowed_domains'], ['String']);
        }

        if (data.hasOwnProperty('allowed_user_key_lengths')) {
          obj['allowed_user_key_lengths'] = _ApiClient["default"].convertToType(data['allowed_user_key_lengths'], {
            'String': 'Number'
          });
        }

        if (data.hasOwnProperty('allowed_users')) {
          obj['allowed_users'] = _ApiClient["default"].convertToType(data['allowed_users'], ['String']);
        }

        if (data.hasOwnProperty('cert_type')) {
          obj['cert_type'] = _ApiClient["default"].convertToType(data['cert_type'], 'Number');
        }

        if (data.hasOwnProperty('critical_options')) {
          obj['critical_options'] = _ApiClient["default"].convertToType(data['critical_options'], {
            'String': 'String'
          });
        }

        if (data.hasOwnProperty('extensions')) {
          obj['extensions'] = _ApiClient["default"].convertToType(data['extensions'], {
            'String': 'String'
          });
        }

        if (data.hasOwnProperty('externally_provided_user_sub_claim_key')) {
          obj['externally_provided_user_sub_claim_key'] = _ApiClient["default"].convertToType(data['externally_provided_user_sub_claim_key'], 'String');
        }

        if (data.hasOwnProperty('is_externally_provided_user')) {
          obj['is_externally_provided_user'] = _ApiClient["default"].convertToType(data['is_externally_provided_user'], 'Boolean');
        }

        if (data.hasOwnProperty('principals')) {
          obj['principals'] = _ApiClient["default"].convertToType(data['principals'], ['String']);
        }

        if (data.hasOwnProperty('static_key_id')) {
          obj['static_key_id'] = _ApiClient["default"].convertToType(data['static_key_id'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>SSHCertificateIssueDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SSHCertificateIssueDetails</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is an array
      if (!Array.isArray(data['allowed_domains'])) {
        throw new Error("Expected the field `allowed_domains` to be an array in the JSON data but got " + data['allowed_domains']);
      } // ensure the json data is an array


      if (!Array.isArray(data['allowed_users'])) {
        throw new Error("Expected the field `allowed_users` to be an array in the JSON data but got " + data['allowed_users']);
      } // ensure the json data is a string


      if (data['externally_provided_user_sub_claim_key'] && !(typeof data['externally_provided_user_sub_claim_key'] === 'string' || data['externally_provided_user_sub_claim_key'] instanceof String)) {
        throw new Error("Expected the field `externally_provided_user_sub_claim_key` to be a primitive type in the JSON string but got " + data['externally_provided_user_sub_claim_key']);
      } // ensure the json data is an array


      if (!Array.isArray(data['principals'])) {
        throw new Error("Expected the field `principals` to be an array in the JSON data but got " + data['principals']);
      } // ensure the json data is a string


      if (data['static_key_id'] && !(typeof data['static_key_id'] === 'string' || data['static_key_id'] instanceof String)) {
        throw new Error("Expected the field `static_key_id` to be a primitive type in the JSON string but got " + data['static_key_id']);
      }

      return true;
    }
  }]);

  return SSHCertificateIssueDetails;
}();
/**
 * Relevant for host certificate
 * @member {Array.<String>} allowed_domains
 */


SSHCertificateIssueDetails.prototype['allowed_domains'] = undefined;
/**
 * @member {Object.<String, Number>} allowed_user_key_lengths
 */

SSHCertificateIssueDetails.prototype['allowed_user_key_lengths'] = undefined;
/**
 * Relevant for user certificate
 * @member {Array.<String>} allowed_users
 */

SSHCertificateIssueDetails.prototype['allowed_users'] = undefined;
/**
 * @member {Number} cert_type
 */

SSHCertificateIssueDetails.prototype['cert_type'] = undefined;
/**
 * @member {Object.<String, String>} critical_options
 */

SSHCertificateIssueDetails.prototype['critical_options'] = undefined;
/**
 * @member {Object.<String, String>} extensions
 */

SSHCertificateIssueDetails.prototype['extensions'] = undefined;
/**
 * ExternallyProvidedUserSubClaimKey is the claim key name where the user name should be taken from
 * @member {String} externally_provided_user_sub_claim_key
 */

SSHCertificateIssueDetails.prototype['externally_provided_user_sub_claim_key'] = undefined;
/**
 * IsExternallyProvidedUser is true if allow users should be taken from claims and not from AllowedUsers
 * @member {Boolean} is_externally_provided_user
 */

SSHCertificateIssueDetails.prototype['is_externally_provided_user'] = undefined;
/**
 * @member {Array.<String>} principals
 */

SSHCertificateIssueDetails.prototype['principals'] = undefined;
/**
 * In case it is empty, the key ID will be combination of user identifiers and a random string
 * @member {String} static_key_id
 */

SSHCertificateIssueDetails.prototype['static_key_id'] = undefined;
var _default = SSHCertificateIssueDetails;
exports["default"] = _default;