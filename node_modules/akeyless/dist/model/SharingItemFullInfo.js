"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _RuleAssigner = _interopRequireDefault(require("./RuleAssigner"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The SharingItemFullInfo model module.
 * @module model/SharingItemFullInfo
 * @version 5.0.6
 */
var SharingItemFullInfo = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SharingItemFullInfo</code>.
   * @alias module:model/SharingItemFullInfo
   */
  function SharingItemFullInfo() {
    _classCallCheck(this, SharingItemFullInfo);

    SharingItemFullInfo.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(SharingItemFullInfo, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>SharingItemFullInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharingItemFullInfo} obj Optional instance to populate.
     * @return {module:model/SharingItemFullInfo} The populated <code>SharingItemFullInfo</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SharingItemFullInfo();

        if (data.hasOwnProperty('assigners')) {
          obj['assigners'] = _ApiClient["default"].convertToType(data['assigners'], [_RuleAssigner["default"]]);
        }

        if (data.hasOwnProperty('capabilities')) {
          obj['capabilities'] = _ApiClient["default"].convertToType(data['capabilities'], ['String']);
        }

        if (data.hasOwnProperty('cb')) {
          obj['cb'] = _ApiClient["default"].convertToType(data['cb'], 'Number');
        }

        if (data.hasOwnProperty('is_limit_access')) {
          obj['is_limit_access'] = _ApiClient["default"].convertToType(data['is_limit_access'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('number_of_access_used')) {
          obj['number_of_access_used'] = _ApiClient["default"].convertToType(data['number_of_access_used'], 'Number');
        }

        if (data.hasOwnProperty('number_of_allowed_access')) {
          obj['number_of_allowed_access'] = _ApiClient["default"].convertToType(data['number_of_allowed_access'], 'Number');
        }

        if (data.hasOwnProperty('path')) {
          obj['path'] = _ApiClient["default"].convertToType(data['path'], 'String');
        }

        if (data.hasOwnProperty('start_time')) {
          obj['start_time'] = _ApiClient["default"].convertToType(data['start_time'], 'Number');
        }

        if (data.hasOwnProperty('ttl')) {
          obj['ttl'] = _ApiClient["default"].convertToType(data['ttl'], 'Number');
        }

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>SharingItemFullInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharingItemFullInfo</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      if (data['assigners']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['assigners'])) {
          throw new Error("Expected the field `assigners` to be an array in the JSON data but got " + data['assigners']);
        } // validate the optional field `assigners` (array)


        var _iterator = _createForOfIteratorHelper(data['assigners']),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            _RuleAssigner["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      } // ensure the json data is an array


      if (!Array.isArray(data['capabilities'])) {
        throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
      } // ensure the json data is a string


      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      } // ensure the json data is a string


      if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
        throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
      } // ensure the json data is a string


      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }

      return true;
    }
  }]);

  return SharingItemFullInfo;
}();
/**
 * @member {Array.<module:model/RuleAssigner>} assigners
 */


SharingItemFullInfo.prototype['assigners'] = undefined;
/**
 * The approved/denied capabilities in the path
 * @member {Array.<String>} capabilities
 */

SharingItemFullInfo.prototype['capabilities'] = undefined;
/**
 * @member {Number} cb
 */

SharingItemFullInfo.prototype['cb'] = undefined;
/**
 * flag that indicate that this rule is allowed to be access RemainingAccess of times.
 * @member {Boolean} is_limit_access
 */

SharingItemFullInfo.prototype['is_limit_access'] = undefined;
/**
 * @member {String} name
 */

SharingItemFullInfo.prototype['name'] = undefined;
/**
 * @member {Number} number_of_access_used
 */

SharingItemFullInfo.prototype['number_of_access_used'] = undefined;
/**
 * @member {Number} number_of_allowed_access
 */

SharingItemFullInfo.prototype['number_of_allowed_access'] = undefined;
/**
 * The path the rule refers to
 * @member {String} path
 */

SharingItemFullInfo.prototype['path'] = undefined;
/**
 * @member {Number} start_time
 */

SharingItemFullInfo.prototype['start_time'] = undefined;
/**
 * @member {Number} ttl
 */

SharingItemFullInfo.prototype['ttl'] = undefined;
/**
 * @member {String} type
 */

SharingItemFullInfo.prototype['type'] = undefined;
var _default = SharingItemFullInfo;
exports["default"] = _default;