"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The PasswordBreachInfo model module.
 * @module model/PasswordBreachInfo
 * @version 5.0.3
 */
var PasswordBreachInfo = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>PasswordBreachInfo</code>.
   * @alias module:model/PasswordBreachInfo
   */
  function PasswordBreachInfo() {
    _classCallCheck(this, PasswordBreachInfo);

    PasswordBreachInfo.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(PasswordBreachInfo, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>PasswordBreachInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordBreachInfo} obj Optional instance to populate.
     * @return {module:model/PasswordBreachInfo} The populated <code>PasswordBreachInfo</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new PasswordBreachInfo();

        if (data.hasOwnProperty('breach_check_date')) {
          obj['breach_check_date'] = _ApiClient["default"].convertToType(data['breach_check_date'], 'Date');
        }

        if (data.hasOwnProperty('breach_count')) {
          obj['breach_count'] = _ApiClient["default"].convertToType(data['breach_count'], 'Number');
        }

        if (data.hasOwnProperty('breach_suggestions')) {
          obj['breach_suggestions'] = _ApiClient["default"].convertToType(data['breach_suggestions'], ['String']);
        }

        if (data.hasOwnProperty('status')) {
          obj['status'] = _ApiClient["default"].convertToType(data['status'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>PasswordBreachInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordBreachInfo</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is an array
      if (!Array.isArray(data['breach_suggestions'])) {
        throw new Error("Expected the field `breach_suggestions` to be an array in the JSON data but got " + data['breach_suggestions']);
      } // ensure the json data is a string


      if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
        throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
      }

      return true;
    }
  }]);

  return PasswordBreachInfo;
}();
/**
 * @member {Date} breach_check_date
 */


PasswordBreachInfo.prototype['breach_check_date'] = undefined;
/**
 * @member {Number} breach_count
 */

PasswordBreachInfo.prototype['breach_count'] = undefined;
/**
 * @member {Array.<String>} breach_suggestions
 */

PasswordBreachInfo.prototype['breach_suggestions'] = undefined;
/**
 * @member {String} status
 */

PasswordBreachInfo.prototype['status'] = undefined;
var _default = PasswordBreachInfo;
exports["default"] = _default;