"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayUpdateRemoteAccess model module.
 * @module model/GatewayUpdateRemoteAccess
 * @version 4.3.0
 */
var GatewayUpdateRemoteAccess = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayUpdateRemoteAccess</code>.
   * gatewayUpdateRemoteAccess is a command that update remote access config
   * @alias module:model/GatewayUpdateRemoteAccess
   */
  function GatewayUpdateRemoteAccess() {
    _classCallCheck(this, GatewayUpdateRemoteAccess);

    GatewayUpdateRemoteAccess.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayUpdateRemoteAccess, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>GatewayUpdateRemoteAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayUpdateRemoteAccess} obj Optional instance to populate.
     * @return {module:model/GatewayUpdateRemoteAccess} The populated <code>GatewayUpdateRemoteAccess</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayUpdateRemoteAccess();

        if (data.hasOwnProperty('allowed-urls')) {
          obj['allowed-urls'] = _ApiClient["default"].convertToType(data['allowed-urls'], 'String');
        }

        if (data.hasOwnProperty('hide-session-recording')) {
          obj['hide-session-recording'] = _ApiClient["default"].convertToType(data['hide-session-recording'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('kexalgs')) {
          obj['kexalgs'] = _ApiClient["default"].convertToType(data['kexalgs'], 'String');
        }

        if (data.hasOwnProperty('keyboard-layout')) {
          obj['keyboard-layout'] = _ApiClient["default"].convertToType(data['keyboard-layout'], 'String');
        }

        if (data.hasOwnProperty('legacy-ssh-algorithm')) {
          obj['legacy-ssh-algorithm'] = _ApiClient["default"].convertToType(data['legacy-ssh-algorithm'], 'String');
        }

        if (data.hasOwnProperty('rdp-target-configuration')) {
          obj['rdp-target-configuration'] = _ApiClient["default"].convertToType(data['rdp-target-configuration'], 'String');
        }

        if (data.hasOwnProperty('ssh-target-configuration')) {
          obj['ssh-target-configuration'] = _ApiClient["default"].convertToType(data['ssh-target-configuration'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayUpdateRemoteAccess;
}();
/**
 * List of valid URLs to redirect from the Portal back to the remote access server (in a comma-delimited list)
 * @member {String} allowed-urls
 * @default 'use-existing'
 */


GatewayUpdateRemoteAccess.prototype['allowed-urls'] = 'use-existing';
/**
 * Specifies whether to show/hide if the session is currently recorded [true/false]
 * @member {String} hide-session-recording
 */

GatewayUpdateRemoteAccess.prototype['hide-session-recording'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayUpdateRemoteAccess.prototype['json'] = false;
/**
 * Decide which algorithm will be used as part of the SSH initial hand-shake process
 * @member {String} kexalgs
 * @default 'use-existing'
 */

GatewayUpdateRemoteAccess.prototype['kexalgs'] = 'use-existing';
/**
 * Enable support for additional keyboard layouts
 * @member {String} keyboard-layout
 * @default 'use-existing'
 */

GatewayUpdateRemoteAccess.prototype['keyboard-layout'] = 'use-existing';
/**
 * Signs SSH certificates using legacy ssh-rsa-cert-01@openssh.com signing algorithm [true/false]
 * @member {String} legacy-ssh-algorithm
 */

GatewayUpdateRemoteAccess.prototype['legacy-ssh-algorithm'] = undefined;
/**
 * Specify the usernameSubClaim that exists inside the IDP JWT, e.g. email
 * @member {String} rdp-target-configuration
 * @default 'use-existing'
 */

GatewayUpdateRemoteAccess.prototype['rdp-target-configuration'] = 'use-existing';
/**
 * Specify the usernameSubClaim that exists inside the IDP JWT, e.g. email
 * @member {String} ssh-target-configuration
 * @default 'use-existing'
 */

GatewayUpdateRemoteAccess.prototype['ssh-target-configuration'] = 'use-existing';
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayUpdateRemoteAccess.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayUpdateRemoteAccess.prototype['uid-token'] = undefined;
var _default = GatewayUpdateRemoteAccess;
exports["default"] = _default;