"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayUpdateLogForwardingDatadog model module.
 * @module model/GatewayUpdateLogForwardingDatadog
 * @version 4.3.0
 */
var GatewayUpdateLogForwardingDatadog = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayUpdateLogForwardingDatadog</code>.
   * gatewayUpdateLogForwardingDatadog is a command that updates log forwarding config (datadog target)
   * @alias module:model/GatewayUpdateLogForwardingDatadog
   */
  function GatewayUpdateLogForwardingDatadog() {
    _classCallCheck(this, GatewayUpdateLogForwardingDatadog);

    GatewayUpdateLogForwardingDatadog.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayUpdateLogForwardingDatadog, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>GatewayUpdateLogForwardingDatadog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayUpdateLogForwardingDatadog} obj Optional instance to populate.
     * @return {module:model/GatewayUpdateLogForwardingDatadog} The populated <code>GatewayUpdateLogForwardingDatadog</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayUpdateLogForwardingDatadog();

        if (data.hasOwnProperty('api-key')) {
          obj['api-key'] = _ApiClient["default"].convertToType(data['api-key'], 'String');
        }

        if (data.hasOwnProperty('enable')) {
          obj['enable'] = _ApiClient["default"].convertToType(data['enable'], 'String');
        }

        if (data.hasOwnProperty('host')) {
          obj['host'] = _ApiClient["default"].convertToType(data['host'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('log-service')) {
          obj['log-service'] = _ApiClient["default"].convertToType(data['log-service'], 'String');
        }

        if (data.hasOwnProperty('log-source')) {
          obj['log-source'] = _ApiClient["default"].convertToType(data['log-source'], 'String');
        }

        if (data.hasOwnProperty('log-tags')) {
          obj['log-tags'] = _ApiClient["default"].convertToType(data['log-tags'], 'String');
        }

        if (data.hasOwnProperty('output-format')) {
          obj['output-format'] = _ApiClient["default"].convertToType(data['output-format'], 'String');
        }

        if (data.hasOwnProperty('pull-interval')) {
          obj['pull-interval'] = _ApiClient["default"].convertToType(data['pull-interval'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayUpdateLogForwardingDatadog;
}();
/**
 * Datadog api key
 * @member {String} api-key
 */


GatewayUpdateLogForwardingDatadog.prototype['api-key'] = undefined;
/**
 * Enable Log Forwarding [true/false]
 * @member {String} enable
 * @default 'true'
 */

GatewayUpdateLogForwardingDatadog.prototype['enable'] = 'true';
/**
 * Datadog host
 * @member {String} host
 */

GatewayUpdateLogForwardingDatadog.prototype['host'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayUpdateLogForwardingDatadog.prototype['json'] = false;
/**
 * Datadog log service
 * @member {String} log-service
 * @default 'use-existing'
 */

GatewayUpdateLogForwardingDatadog.prototype['log-service'] = 'use-existing';
/**
 * Datadog log source
 * @member {String} log-source
 * @default 'use-existing'
 */

GatewayUpdateLogForwardingDatadog.prototype['log-source'] = 'use-existing';
/**
 * A comma-separated list of Datadog log tags formatted as \"key:value\" strings
 * @member {String} log-tags
 * @default 'use-existing'
 */

GatewayUpdateLogForwardingDatadog.prototype['log-tags'] = 'use-existing';
/**
 * Logs format [text/json]
 * @member {String} output-format
 * @default 'text'
 */

GatewayUpdateLogForwardingDatadog.prototype['output-format'] = 'text';
/**
 * Pull interval in seconds
 * @member {String} pull-interval
 * @default '10'
 */

GatewayUpdateLogForwardingDatadog.prototype['pull-interval'] = '10';
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayUpdateLogForwardingDatadog.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayUpdateLogForwardingDatadog.prototype['uid-token'] = undefined;
var _default = GatewayUpdateLogForwardingDatadog;
exports["default"] = _default;