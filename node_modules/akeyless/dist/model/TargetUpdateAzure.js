"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The TargetUpdateAzure model module.
 * @module model/TargetUpdateAzure
 * @version 5.0.0
 */
var TargetUpdateAzure = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>TargetUpdateAzure</code>.
   * @alias module:model/TargetUpdateAzure
   * @param name {String} Target name
   */
  function TargetUpdateAzure(name) {
    _classCallCheck(this, TargetUpdateAzure);

    TargetUpdateAzure.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(TargetUpdateAzure, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['json'] = false;
      obj['name'] = name;
    }
    /**
     * Constructs a <code>TargetUpdateAzure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetUpdateAzure} obj Optional instance to populate.
     * @return {module:model/TargetUpdateAzure} The populated <code>TargetUpdateAzure</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new TargetUpdateAzure();

        if (data.hasOwnProperty('client-id')) {
          obj['client-id'] = _ApiClient["default"].convertToType(data['client-id'], 'String');
        }

        if (data.hasOwnProperty('client-secret')) {
          obj['client-secret'] = _ApiClient["default"].convertToType(data['client-secret'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('keep-prev-version')) {
          obj['keep-prev-version'] = _ApiClient["default"].convertToType(data['keep-prev-version'], 'String');
        }

        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
        }

        if (data.hasOwnProperty('max-versions')) {
          obj['max-versions'] = _ApiClient["default"].convertToType(data['max-versions'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-name')) {
          obj['new-name'] = _ApiClient["default"].convertToType(data['new-name'], 'String');
        }

        if (data.hasOwnProperty('resource-group-name')) {
          obj['resource-group-name'] = _ApiClient["default"].convertToType(data['resource-group-name'], 'String');
        }

        if (data.hasOwnProperty('resource-name')) {
          obj['resource-name'] = _ApiClient["default"].convertToType(data['resource-name'], 'String');
        }

        if (data.hasOwnProperty('subscription-id')) {
          obj['subscription-id'] = _ApiClient["default"].convertToType(data['subscription-id'], 'String');
        }

        if (data.hasOwnProperty('tenant-id')) {
          obj['tenant-id'] = _ApiClient["default"].convertToType(data['tenant-id'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('use-gw-cloud-identity')) {
          obj['use-gw-cloud-identity'] = _ApiClient["default"].convertToType(data['use-gw-cloud-identity'], 'Boolean');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>TargetUpdateAzure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetUpdateAzure</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(TargetUpdateAzure.RequiredProperties),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;

          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        } // ensure the json data is a string

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (data['client-id'] && !(typeof data['client-id'] === 'string' || data['client-id'] instanceof String)) {
        throw new Error("Expected the field `client-id` to be a primitive type in the JSON string but got " + data['client-id']);
      } // ensure the json data is a string


      if (data['client-secret'] && !(typeof data['client-secret'] === 'string' || data['client-secret'] instanceof String)) {
        throw new Error("Expected the field `client-secret` to be a primitive type in the JSON string but got " + data['client-secret']);
      } // ensure the json data is a string


      if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
        throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
      } // ensure the json data is a string


      if (data['keep-prev-version'] && !(typeof data['keep-prev-version'] === 'string' || data['keep-prev-version'] instanceof String)) {
        throw new Error("Expected the field `keep-prev-version` to be a primitive type in the JSON string but got " + data['keep-prev-version']);
      } // ensure the json data is a string


      if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
        throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
      } // ensure the json data is a string


      if (data['max-versions'] && !(typeof data['max-versions'] === 'string' || data['max-versions'] instanceof String)) {
        throw new Error("Expected the field `max-versions` to be a primitive type in the JSON string but got " + data['max-versions']);
      } // ensure the json data is a string


      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      } // ensure the json data is a string


      if (data['new-name'] && !(typeof data['new-name'] === 'string' || data['new-name'] instanceof String)) {
        throw new Error("Expected the field `new-name` to be a primitive type in the JSON string but got " + data['new-name']);
      } // ensure the json data is a string


      if (data['resource-group-name'] && !(typeof data['resource-group-name'] === 'string' || data['resource-group-name'] instanceof String)) {
        throw new Error("Expected the field `resource-group-name` to be a primitive type in the JSON string but got " + data['resource-group-name']);
      } // ensure the json data is a string


      if (data['resource-name'] && !(typeof data['resource-name'] === 'string' || data['resource-name'] instanceof String)) {
        throw new Error("Expected the field `resource-name` to be a primitive type in the JSON string but got " + data['resource-name']);
      } // ensure the json data is a string


      if (data['subscription-id'] && !(typeof data['subscription-id'] === 'string' || data['subscription-id'] instanceof String)) {
        throw new Error("Expected the field `subscription-id` to be a primitive type in the JSON string but got " + data['subscription-id']);
      } // ensure the json data is a string


      if (data['tenant-id'] && !(typeof data['tenant-id'] === 'string' || data['tenant-id'] instanceof String)) {
        throw new Error("Expected the field `tenant-id` to be a primitive type in the JSON string but got " + data['tenant-id']);
      } // ensure the json data is a string


      if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
        throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
      } // ensure the json data is a string


      if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
        throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
      }

      return true;
    }
  }]);

  return TargetUpdateAzure;
}();

TargetUpdateAzure.RequiredProperties = ["name"];
/**
 * Azure client/application id
 * @member {String} client-id
 */

TargetUpdateAzure.prototype['client-id'] = undefined;
/**
 * Azure client secret
 * @member {String} client-secret
 */

TargetUpdateAzure.prototype['client-secret'] = undefined;
/**
 * Description of the object
 * @member {String} description
 */

TargetUpdateAzure.prototype['description'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

TargetUpdateAzure.prototype['json'] = false;
/**
 * Whether to keep previous version [true/false]. If not set, use default according to account settings
 * @member {String} keep-prev-version
 */

TargetUpdateAzure.prototype['keep-prev-version'] = undefined;
/**
 * The name of a key that used to encrypt the target secret value (if empty, the account default protectionKey key will be used)
 * @member {String} key
 */

TargetUpdateAzure.prototype['key'] = undefined;
/**
 * Set the maximum number of versions, limited by the account settings defaults.
 * @member {String} max-versions
 */

TargetUpdateAzure.prototype['max-versions'] = undefined;
/**
 * Target name
 * @member {String} name
 */

TargetUpdateAzure.prototype['name'] = undefined;
/**
 * New target name
 * @member {String} new-name
 */

TargetUpdateAzure.prototype['new-name'] = undefined;
/**
 * The Resource Group name in your Azure subscription
 * @member {String} resource-group-name
 */

TargetUpdateAzure.prototype['resource-group-name'] = undefined;
/**
 * The name of the relevant Resource
 * @member {String} resource-name
 */

TargetUpdateAzure.prototype['resource-name'] = undefined;
/**
 * Azure Subscription Id
 * @member {String} subscription-id
 */

TargetUpdateAzure.prototype['subscription-id'] = undefined;
/**
 * Azure tenant id
 * @member {String} tenant-id
 */

TargetUpdateAzure.prototype['tenant-id'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

TargetUpdateAzure.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

TargetUpdateAzure.prototype['uid-token'] = undefined;
/**
 * Use the GW's Cloud IAM [Deprecated: Use connection-type=cloud-identity]
 * @member {Boolean} use-gw-cloud-identity
 */

TargetUpdateAzure.prototype['use-gw-cloud-identity'] = undefined;
var _default = TargetUpdateAzure;
exports["default"] = _default;