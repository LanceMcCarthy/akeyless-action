"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GenerateCsr model module.
 * @module model/GenerateCsr
 * @version 3.5.1
 */
var GenerateCsr = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GenerateCsr</code>.
   * @alias module:model/GenerateCsr
   * @param commonName {String} The common name to be included in the CSR certificate
   * @param name {String} The classic key name
   */
  function GenerateCsr(commonName, name) {
    _classCallCheck(this, GenerateCsr);

    GenerateCsr.initialize(this, commonName, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GenerateCsr, null, [{
    key: "initialize",
    value: function initialize(obj, commonName, name) {
      obj['common-name'] = commonName;
      obj['name'] = name;
    }
    /**
     * Constructs a <code>GenerateCsr</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateCsr} obj Optional instance to populate.
     * @return {module:model/GenerateCsr} The populated <code>GenerateCsr</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GenerateCsr();

        if (data.hasOwnProperty('alg')) {
          obj['alg'] = _ApiClient["default"].convertToType(data['alg'], 'String');
        }

        if (data.hasOwnProperty('alt-names')) {
          obj['alt-names'] = _ApiClient["default"].convertToType(data['alt-names'], 'String');
        }

        if (data.hasOwnProperty('certificate-type')) {
          obj['certificate-type'] = _ApiClient["default"].convertToType(data['certificate-type'], 'String');
        }

        if (data.hasOwnProperty('city')) {
          obj['city'] = _ApiClient["default"].convertToType(data['city'], 'String');
        }

        if (data.hasOwnProperty('common-name')) {
          obj['common-name'] = _ApiClient["default"].convertToType(data['common-name'], 'String');
        }

        if (data.hasOwnProperty('country')) {
          obj['country'] = _ApiClient["default"].convertToType(data['country'], 'String');
        }

        if (data.hasOwnProperty('critical')) {
          obj['critical'] = _ApiClient["default"].convertToType(data['critical'], 'Boolean');
        }

        if (data.hasOwnProperty('dep')) {
          obj['dep'] = _ApiClient["default"].convertToType(data['dep'], 'String');
        }

        if (data.hasOwnProperty('email-addresses')) {
          obj['email-addresses'] = _ApiClient["default"].convertToType(data['email-addresses'], 'String');
        }

        if (data.hasOwnProperty('generate-key')) {
          obj['generate-key'] = _ApiClient["default"].convertToType(data['generate-key'], 'Boolean');
        }

        if (data.hasOwnProperty('ip-addresses')) {
          obj['ip-addresses'] = _ApiClient["default"].convertToType(data['ip-addresses'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('org')) {
          obj['org'] = _ApiClient["default"].convertToType(data['org'], 'String');
        }

        if (data.hasOwnProperty('state')) {
          obj['state'] = _ApiClient["default"].convertToType(data['state'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('uri-sans')) {
          obj['uri-sans'] = _ApiClient["default"].convertToType(data['uri-sans'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GenerateCsr;
}();
/**
 * @member {String} alg
 */


GenerateCsr.prototype['alg'] = undefined;
/**
 * A comma-separated list of dns alternative names
 * @member {String} alt-names
 */

GenerateCsr.prototype['alt-names'] = undefined;
/**
 * The certificate type to be included in the CSR certificate (ssl-client/ssl-server/certificate-signing)
 * @member {String} certificate-type
 */

GenerateCsr.prototype['certificate-type'] = undefined;
/**
 * The city to be included in the CSR certificate
 * @member {String} city
 */

GenerateCsr.prototype['city'] = undefined;
/**
 * The common name to be included in the CSR certificate
 * @member {String} common-name
 */

GenerateCsr.prototype['common-name'] = undefined;
/**
 * The country to be included in the CSR certificate
 * @member {String} country
 */

GenerateCsr.prototype['country'] = undefined;
/**
 * Add critical to the key usage extension (will be false if not added)
 * @member {Boolean} critical
 */

GenerateCsr.prototype['critical'] = undefined;
/**
 * The department to be included in the CSR certificate
 * @member {String} dep
 */

GenerateCsr.prototype['dep'] = undefined;
/**
 * A comma-separated list of email addresses alternative names
 * @member {String} email-addresses
 */

GenerateCsr.prototype['email-addresses'] = undefined;
/**
 * Generate a new classic key for the csr
 * @member {Boolean} generate-key
 */

GenerateCsr.prototype['generate-key'] = undefined;
/**
 * A comma-separated list of ip addresses alternative names
 * @member {String} ip-addresses
 */

GenerateCsr.prototype['ip-addresses'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GenerateCsr.prototype['json'] = false;
/**
 * The classic key name
 * @member {String} name
 */

GenerateCsr.prototype['name'] = undefined;
/**
 * The organization to be included in the CSR certificate
 * @member {String} org
 */

GenerateCsr.prototype['org'] = undefined;
/**
 * The state to be included in the CSR certificate
 * @member {String} state
 */

GenerateCsr.prototype['state'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GenerateCsr.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GenerateCsr.prototype['uid-token'] = undefined;
/**
 * A comma-separated list of uri alternative names
 * @member {String} uri-sans
 */

GenerateCsr.prototype['uri-sans'] = undefined;
var _default = GenerateCsr;
exports["default"] = _default;