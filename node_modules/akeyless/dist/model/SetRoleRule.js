"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The SetRoleRule model module.
 * @module model/SetRoleRule
 * @version 2.20.3
 */
var SetRoleRule = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SetRoleRule</code>.
   * @alias module:model/SetRoleRule
   * @param capability {Array.<String>} List of the approved/denied capabilities in the path options: [read, create, update, delete, list, deny]
   * @param path {String} The path the rule refers to
   * @param roleName {String} The role name to be updated
   */
  function SetRoleRule(capability, path, roleName) {
    _classCallCheck(this, SetRoleRule);

    SetRoleRule.initialize(this, capability, path, roleName);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(SetRoleRule, null, [{
    key: "initialize",
    value: function initialize(obj, capability, path, roleName) {
      obj['capability'] = capability;
      obj['path'] = path;
      obj['role-name'] = roleName;
    }
    /**
     * Constructs a <code>SetRoleRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetRoleRule} obj Optional instance to populate.
     * @return {module:model/SetRoleRule} The populated <code>SetRoleRule</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SetRoleRule();

        if (data.hasOwnProperty('capability')) {
          obj['capability'] = _ApiClient["default"].convertToType(data['capability'], ['String']);
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('path')) {
          obj['path'] = _ApiClient["default"].convertToType(data['path'], 'String');
        }

        if (data.hasOwnProperty('role-name')) {
          obj['role-name'] = _ApiClient["default"].convertToType(data['role-name'], 'String');
        }

        if (data.hasOwnProperty('rule-type')) {
          obj['rule-type'] = _ApiClient["default"].convertToType(data['rule-type'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return SetRoleRule;
}();
/**
 * List of the approved/denied capabilities in the path options: [read, create, update, delete, list, deny]
 * @member {Array.<String>} capability
 */


SetRoleRule.prototype['capability'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 */

SetRoleRule.prototype['json'] = undefined;
/**
 * The path the rule refers to
 * @member {String} path
 */

SetRoleRule.prototype['path'] = undefined;
/**
 * The role name to be updated
 * @member {String} role-name
 */

SetRoleRule.prototype['role-name'] = undefined;
/**
 * item-rule, target-rule, role-rule, auth-method-rule, search-rule, reports-rule, gw-reports-rule or sra-reports-rule
 * @member {String} rule-type
 * @default 'item-rule'
 */

SetRoleRule.prototype['rule-type'] = 'item-rule';
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

SetRoleRule.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

SetRoleRule.prototype['uid-token'] = undefined;
var _default = SetRoleRule;
exports["default"] = _default;