"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The CreatePasskey model module.
 * @module model/CreatePasskey
 * @version 5.0.6
 */
var CreatePasskey = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreatePasskey</code>.
   * CreatePasskey is a command that creates a new passkey
   * @alias module:model/CreatePasskey
   * @param alg {String} Passkey type; options: [EC256, EC384, EC512]
   * @param name {String} ClassicKey name
   */
  function CreatePasskey(alg, name) {
    _classCallCheck(this, CreatePasskey);

    CreatePasskey.initialize(this, alg, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CreatePasskey, null, [{
    key: "initialize",
    value: function initialize(obj, alg, name) {
      obj['accessibility'] = 'regular';
      obj['alg'] = alg || 'EC256';
      obj['json'] = false;
      obj['name'] = name;
    }
    /**
     * Constructs a <code>CreatePasskey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePasskey} obj Optional instance to populate.
     * @return {module:model/CreatePasskey} The populated <code>CreatePasskey</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreatePasskey();

        if (data.hasOwnProperty('accessibility')) {
          obj['accessibility'] = _ApiClient["default"].convertToType(data['accessibility'], 'String');
        }

        if (data.hasOwnProperty('alg')) {
          obj['alg'] = _ApiClient["default"].convertToType(data['alg'], 'String');
        }

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('origin-url')) {
          obj['origin-url'] = _ApiClient["default"].convertToType(data['origin-url'], ['String']);
        }

        if (data.hasOwnProperty('protection-key-name')) {
          obj['protection-key-name'] = _ApiClient["default"].convertToType(data['protection-key-name'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('username')) {
          obj['username'] = _ApiClient["default"].convertToType(data['username'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>CreatePasskey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePasskey</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreatePasskey.RequiredProperties),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;

          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        } // ensure the json data is a string

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (data['accessibility'] && !(typeof data['accessibility'] === 'string' || data['accessibility'] instanceof String)) {
        throw new Error("Expected the field `accessibility` to be a primitive type in the JSON string but got " + data['accessibility']);
      } // ensure the json data is a string


      if (data['alg'] && !(typeof data['alg'] === 'string' || data['alg'] instanceof String)) {
        throw new Error("Expected the field `alg` to be a primitive type in the JSON string but got " + data['alg']);
      } // ensure the json data is a string


      if (data['delete_protection'] && !(typeof data['delete_protection'] === 'string' || data['delete_protection'] instanceof String)) {
        throw new Error("Expected the field `delete_protection` to be a primitive type in the JSON string but got " + data['delete_protection']);
      } // ensure the json data is a string


      if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
        throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
      } // ensure the json data is a string


      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      } // ensure the json data is an array


      if (!Array.isArray(data['origin-url'])) {
        throw new Error("Expected the field `origin-url` to be an array in the JSON data but got " + data['origin-url']);
      } // ensure the json data is a string


      if (data['protection-key-name'] && !(typeof data['protection-key-name'] === 'string' || data['protection-key-name'] instanceof String)) {
        throw new Error("Expected the field `protection-key-name` to be a primitive type in the JSON string but got " + data['protection-key-name']);
      } // ensure the json data is an array


      if (!Array.isArray(data['tags'])) {
        throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
      } // ensure the json data is a string


      if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
        throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
      } // ensure the json data is a string


      if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
        throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
      } // ensure the json data is a string


      if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
        throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
      }

      return true;
    }
  }]);

  return CreatePasskey;
}();

CreatePasskey.RequiredProperties = ["alg", "name"];
/**
 * for personal password manager
 * @member {String} accessibility
 * @default 'regular'
 */

CreatePasskey.prototype['accessibility'] = 'regular';
/**
 * Passkey type; options: [EC256, EC384, EC512]
 * @member {String} alg
 * @default 'EC256'
 */

CreatePasskey.prototype['alg'] = 'EC256';
/**
 * Protection from accidental deletion of this object [true/false]
 * @member {String} delete_protection
 */

CreatePasskey.prototype['delete_protection'] = undefined;
/**
 * Description of the object
 * @member {String} description
 */

CreatePasskey.prototype['description'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

CreatePasskey.prototype['json'] = false;
/**
 * ClassicKey name
 * @member {String} name
 */

CreatePasskey.prototype['name'] = undefined;
/**
 * Originating websites for this passkey
 * @member {Array.<String>} origin-url
 */

CreatePasskey.prototype['origin-url'] = undefined;
/**
 * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
 * @member {String} protection-key-name
 */

CreatePasskey.prototype['protection-key-name'] = undefined;
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

CreatePasskey.prototype['tags'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

CreatePasskey.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

CreatePasskey.prototype['uid-token'] = undefined;
/**
 * For Password Management use
 * @member {String} username
 */

CreatePasskey.prototype['username'] = undefined;
var _default = CreatePasskey;
exports["default"] = _default;