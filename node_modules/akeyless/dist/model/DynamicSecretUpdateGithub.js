"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The DynamicSecretUpdateGithub model module.
 * @module model/DynamicSecretUpdateGithub
 * @version 3.6.2
 */
var DynamicSecretUpdateGithub = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>DynamicSecretUpdateGithub</code>.
   * dynamicSecretUpdateGithub is a command that updates github dynamic secret
   * @alias module:model/DynamicSecretUpdateGithub
   * @param name {String} Dynamic secret name
   */
  function DynamicSecretUpdateGithub(name) {
    _classCallCheck(this, DynamicSecretUpdateGithub);

    DynamicSecretUpdateGithub.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(DynamicSecretUpdateGithub, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['name'] = name;
    }
    /**
     * Constructs a <code>DynamicSecretUpdateGithub</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DynamicSecretUpdateGithub} obj Optional instance to populate.
     * @return {module:model/DynamicSecretUpdateGithub} The populated <code>DynamicSecretUpdateGithub</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new DynamicSecretUpdateGithub();

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('github-app-id')) {
          obj['github-app-id'] = _ApiClient["default"].convertToType(data['github-app-id'], 'Number');
        }

        if (data.hasOwnProperty('github-app-private-key')) {
          obj['github-app-private-key'] = _ApiClient["default"].convertToType(data['github-app-private-key'], 'String');
        }

        if (data.hasOwnProperty('github-base-url')) {
          obj['github-base-url'] = _ApiClient["default"].convertToType(data['github-base-url'], 'String');
        }

        if (data.hasOwnProperty('installation-id')) {
          obj['installation-id'] = _ApiClient["default"].convertToType(data['installation-id'], 'Number');
        }

        if (data.hasOwnProperty('installation-organization')) {
          obj['installation-organization'] = _ApiClient["default"].convertToType(data['installation-organization'], 'String');
        }

        if (data.hasOwnProperty('installation-repository')) {
          obj['installation-repository'] = _ApiClient["default"].convertToType(data['installation-repository'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-name')) {
          obj['new-name'] = _ApiClient["default"].convertToType(data['new-name'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('token-permissions')) {
          obj['token-permissions'] = _ApiClient["default"].convertToType(data['token-permissions'], ['String']);
        }

        if (data.hasOwnProperty('token-repositories')) {
          obj['token-repositories'] = _ApiClient["default"].convertToType(data['token-repositories'], ['String']);
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return DynamicSecretUpdateGithub;
}();
/**
 * Protection from accidental deletion of this item [true/false]
 * @member {String} delete_protection
 */


DynamicSecretUpdateGithub.prototype['delete_protection'] = undefined;
/**
 * Description of the object
 * @member {String} description
 */

DynamicSecretUpdateGithub.prototype['description'] = undefined;
/**
 * Github app id
 * @member {Number} github-app-id
 */

DynamicSecretUpdateGithub.prototype['github-app-id'] = undefined;
/**
 * App private key
 * @member {String} github-app-private-key
 */

DynamicSecretUpdateGithub.prototype['github-app-private-key'] = undefined;
/**
 * Base URL
 * @member {String} github-base-url
 * @default 'https://api.github.com/'
 */

DynamicSecretUpdateGithub.prototype['github-base-url'] = 'https://api.github.com/';
/**
 * Github app installation id
 * @member {Number} installation-id
 */

DynamicSecretUpdateGithub.prototype['installation-id'] = undefined;
/**
 * Optional, instead of installation id, set a GitHub organization name
 * @member {String} installation-organization
 */

DynamicSecretUpdateGithub.prototype['installation-organization'] = undefined;
/**
 * Optional, instead of installation id, set a GitHub repository '<owner>/<repo-name>
 * @member {String} installation-repository
 */

DynamicSecretUpdateGithub.prototype['installation-repository'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

DynamicSecretUpdateGithub.prototype['json'] = false;
/**
 * Dynamic secret name
 * @member {String} name
 */

DynamicSecretUpdateGithub.prototype['name'] = undefined;
/**
 * Dynamic secret new name
 * @member {String} new-name
 */

DynamicSecretUpdateGithub.prototype['new-name'] = undefined;
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

DynamicSecretUpdateGithub.prototype['tags'] = undefined;
/**
 * Target name
 * @member {String} target-name
 */

DynamicSecretUpdateGithub.prototype['target-name'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

DynamicSecretUpdateGithub.prototype['token'] = undefined;
/**
 * Optional - installation token's allowed permissions
 * @member {Array.<String>} token-permissions
 */

DynamicSecretUpdateGithub.prototype['token-permissions'] = undefined;
/**
 * Optional - installation token's allowed repositories
 * @member {Array.<String>} token-repositories
 */

DynamicSecretUpdateGithub.prototype['token-repositories'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

DynamicSecretUpdateGithub.prototype['uid-token'] = undefined;
var _default = DynamicSecretUpdateGithub;
exports["default"] = _default;