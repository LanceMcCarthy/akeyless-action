"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _CfInfo = _interopRequireDefault(require("./CfInfo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GwClusterIdentity model module.
 * @module model/GwClusterIdentity
 * @version 5.0.3
 */
var GwClusterIdentity = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GwClusterIdentity</code>.
   * @alias module:model/GwClusterIdentity
   */
  function GwClusterIdentity() {
    _classCallCheck(this, GwClusterIdentity);

    GwClusterIdentity.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GwClusterIdentity, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>GwClusterIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GwClusterIdentity} obj Optional instance to populate.
     * @return {module:model/GwClusterIdentity} The populated <code>GwClusterIdentity</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GwClusterIdentity();

        if (data.hasOwnProperty('action_allowed')) {
          obj['action_allowed'] = _ApiClient["default"].convertToType(data['action_allowed'], 'Boolean');
        }

        if (data.hasOwnProperty('allowed')) {
          obj['allowed'] = _ApiClient["default"].convertToType(data['allowed'], 'Boolean');
        }

        if (data.hasOwnProperty('allowed_access_ids')) {
          obj['allowed_access_ids'] = _ApiClient["default"].convertToType(data['allowed_access_ids'], ['String']);
        }

        if (data.hasOwnProperty('cluster_name')) {
          obj['cluster_name'] = _ApiClient["default"].convertToType(data['cluster_name'], 'String');
        }

        if (data.hasOwnProperty('cluster_url')) {
          obj['cluster_url'] = _ApiClient["default"].convertToType(data['cluster_url'], 'String');
        }

        if (data.hasOwnProperty('current_gw')) {
          obj['current_gw'] = _ApiClient["default"].convertToType(data['current_gw'], 'Boolean');
        }

        if (data.hasOwnProperty('customer_fragment_ids')) {
          obj['customer_fragment_ids'] = _ApiClient["default"].convertToType(data['customer_fragment_ids'], ['String']);
        }

        if (data.hasOwnProperty('customer_fragments')) {
          obj['customer_fragments'] = _ApiClient["default"].convertToType(data['customer_fragments'], [_CfInfo["default"]]);
        }

        if (data.hasOwnProperty('default_protection_key_id')) {
          obj['default_protection_key_id'] = _ApiClient["default"].convertToType(data['default_protection_key_id'], 'Number');
        }

        if (data.hasOwnProperty('default_secret_location')) {
          obj['default_secret_location'] = _ApiClient["default"].convertToType(data['default_secret_location'], 'String');
        }

        if (data.hasOwnProperty('display_name')) {
          obj['display_name'] = _ApiClient["default"].convertToType(data['display_name'], 'String');
        }

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
        }

        if (data.hasOwnProperty('is_kerberos_auth_enabled')) {
          obj['is_kerberos_auth_enabled'] = _ApiClient["default"].convertToType(data['is_kerberos_auth_enabled'], 'Boolean');
        }

        if (data.hasOwnProperty('is_ldap_auth_enabled')) {
          obj['is_ldap_auth_enabled'] = _ApiClient["default"].convertToType(data['is_ldap_auth_enabled'], 'Boolean');
        }

        if (data.hasOwnProperty('serverless_type')) {
          obj['serverless_type'] = _ApiClient["default"].convertToType(data['serverless_type'], 'String');
        }

        if (data.hasOwnProperty('status')) {
          obj['status'] = _ApiClient["default"].convertToType(data['status'], 'String');
        }

        if (data.hasOwnProperty('status_description')) {
          obj['status_description'] = _ApiClient["default"].convertToType(data['status_description'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>GwClusterIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GwClusterIdentity</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is an array
      if (!Array.isArray(data['allowed_access_ids'])) {
        throw new Error("Expected the field `allowed_access_ids` to be an array in the JSON data but got " + data['allowed_access_ids']);
      } // ensure the json data is a string


      if (data['cluster_name'] && !(typeof data['cluster_name'] === 'string' || data['cluster_name'] instanceof String)) {
        throw new Error("Expected the field `cluster_name` to be a primitive type in the JSON string but got " + data['cluster_name']);
      } // ensure the json data is a string


      if (data['cluster_url'] && !(typeof data['cluster_url'] === 'string' || data['cluster_url'] instanceof String)) {
        throw new Error("Expected the field `cluster_url` to be a primitive type in the JSON string but got " + data['cluster_url']);
      } // ensure the json data is an array


      if (!Array.isArray(data['customer_fragment_ids'])) {
        throw new Error("Expected the field `customer_fragment_ids` to be an array in the JSON data but got " + data['customer_fragment_ids']);
      }

      if (data['customer_fragments']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['customer_fragments'])) {
          throw new Error("Expected the field `customer_fragments` to be an array in the JSON data but got " + data['customer_fragments']);
        } // validate the optional field `customer_fragments` (array)


        var _iterator = _createForOfIteratorHelper(data['customer_fragments']),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            _CfInfo["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      } // ensure the json data is a string


      if (data['default_secret_location'] && !(typeof data['default_secret_location'] === 'string' || data['default_secret_location'] instanceof String)) {
        throw new Error("Expected the field `default_secret_location` to be a primitive type in the JSON string but got " + data['default_secret_location']);
      } // ensure the json data is a string


      if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
        throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
      } // ensure the json data is a string


      if (data['serverless_type'] && !(typeof data['serverless_type'] === 'string' || data['serverless_type'] instanceof String)) {
        throw new Error("Expected the field `serverless_type` to be a primitive type in the JSON string but got " + data['serverless_type']);
      } // ensure the json data is a string


      if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
        throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
      } // ensure the json data is a string


      if (data['status_description'] && !(typeof data['status_description'] === 'string' || data['status_description'] instanceof String)) {
        throw new Error("Expected the field `status_description` to be a primitive type in the JSON string but got " + data['status_description']);
      }

      return true;
    }
  }]);

  return GwClusterIdentity;
}();
/**
 * @member {Boolean} action_allowed
 */


GwClusterIdentity.prototype['action_allowed'] = undefined;
/**
 * @member {Boolean} allowed
 */

GwClusterIdentity.prototype['allowed'] = undefined;
/**
 * @member {Array.<String>} allowed_access_ids
 */

GwClusterIdentity.prototype['allowed_access_ids'] = undefined;
/**
 * @member {String} cluster_name
 */

GwClusterIdentity.prototype['cluster_name'] = undefined;
/**
 * @member {String} cluster_url
 */

GwClusterIdentity.prototype['cluster_url'] = undefined;
/**
 * @member {Boolean} current_gw
 */

GwClusterIdentity.prototype['current_gw'] = undefined;
/**
 * Deprecated - use CustomerFragments instead
 * @member {Array.<String>} customer_fragment_ids
 */

GwClusterIdentity.prototype['customer_fragment_ids'] = undefined;
/**
 * @member {Array.<module:model/CfInfo>} customer_fragments
 */

GwClusterIdentity.prototype['customer_fragments'] = undefined;
/**
 * @member {Number} default_protection_key_id
 */

GwClusterIdentity.prototype['default_protection_key_id'] = undefined;
/**
 * @member {String} default_secret_location
 */

GwClusterIdentity.prototype['default_secret_location'] = undefined;
/**
 * @member {String} display_name
 */

GwClusterIdentity.prototype['display_name'] = undefined;
/**
 * @member {Number} id
 */

GwClusterIdentity.prototype['id'] = undefined;
/**
 * @member {Boolean} is_kerberos_auth_enabled
 */

GwClusterIdentity.prototype['is_kerberos_auth_enabled'] = undefined;
/**
 * @member {Boolean} is_ldap_auth_enabled
 */

GwClusterIdentity.prototype['is_ldap_auth_enabled'] = undefined;
/**
 * @member {String} serverless_type
 */

GwClusterIdentity.prototype['serverless_type'] = undefined;
/**
 * @member {String} status
 */

GwClusterIdentity.prototype['status'] = undefined;
/**
 * @member {String} status_description
 */

GwClusterIdentity.prototype['status_description'] = undefined;
var _default = GwClusterIdentity;
exports["default"] = _default;