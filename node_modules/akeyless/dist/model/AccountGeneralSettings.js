"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _AllowedIpSettings = _interopRequireDefault(require("./AllowedIpSettings"));

var _DataProtectionSection = _interopRequireDefault(require("./DataProtectionSection"));

var _DynamicSecretMaxTtl = _interopRequireDefault(require("./DynamicSecretMaxTtl"));

var _PasswordExpirationInfo = _interopRequireDefault(require("./PasswordExpirationInfo"));

var _PasswordPolicyInfo = _interopRequireDefault(require("./PasswordPolicyInfo"));

var _PasswordScoreSetting = _interopRequireDefault(require("./PasswordScoreSetting"));

var _RotationSecretMaxInterval = _interopRequireDefault(require("./RotationSecretMaxInterval"));

var _SharingPolicyInfo = _interopRequireDefault(require("./SharingPolicyInfo"));

var _UsageEventSetting = _interopRequireDefault(require("./UsageEventSetting"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The AccountGeneralSettings model module.
 * @module model/AccountGeneralSettings
 * @version 5.0.0
 */
var AccountGeneralSettings = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AccountGeneralSettings</code>.
   * AccountGeneralSettings describes general settings for an account
   * @alias module:model/AccountGeneralSettings
   */
  function AccountGeneralSettings() {
    _classCallCheck(this, AccountGeneralSettings);

    AccountGeneralSettings.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(AccountGeneralSettings, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>AccountGeneralSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountGeneralSettings} obj Optional instance to populate.
     * @return {module:model/AccountGeneralSettings} The populated <code>AccountGeneralSettings</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AccountGeneralSettings();

        if (data.hasOwnProperty('account_default_key_item_id')) {
          obj['account_default_key_item_id'] = _ApiClient["default"].convertToType(data['account_default_key_item_id'], 'Number');
        }

        if (data.hasOwnProperty('account_default_key_name')) {
          obj['account_default_key_name'] = _ApiClient["default"].convertToType(data['account_default_key_name'], 'String');
        }

        if (data.hasOwnProperty('allowed_clients_ips')) {
          obj['allowed_clients_ips'] = _AllowedIpSettings["default"].constructFromObject(data['allowed_clients_ips']);
        }

        if (data.hasOwnProperty('allowed_gateways_ips')) {
          obj['allowed_gateways_ips'] = _AllowedIpSettings["default"].constructFromObject(data['allowed_gateways_ips']);
        }

        if (data.hasOwnProperty('auth_usage_event')) {
          obj['auth_usage_event'] = _UsageEventSetting["default"].constructFromObject(data['auth_usage_event']);
        }

        if (data.hasOwnProperty('data_protection_section')) {
          obj['data_protection_section'] = _DataProtectionSection["default"].constructFromObject(data['data_protection_section']);
        }

        if (data.hasOwnProperty('dynamic_secret_max_ttl')) {
          obj['dynamic_secret_max_ttl'] = _DynamicSecretMaxTtl["default"].constructFromObject(data['dynamic_secret_max_ttl']);
        }

        if (data.hasOwnProperty('enable_request_for_access')) {
          obj['enable_request_for_access'] = _ApiClient["default"].convertToType(data['enable_request_for_access'], 'Boolean');
        }

        if (data.hasOwnProperty('invalid_characters')) {
          obj['invalid_characters'] = _ApiClient["default"].convertToType(data['invalid_characters'], 'String');
        }

        if (data.hasOwnProperty('item_usage_event')) {
          obj['item_usage_event'] = _UsageEventSetting["default"].constructFromObject(data['item_usage_event']);
        }

        if (data.hasOwnProperty('lock_default_key')) {
          obj['lock_default_key'] = _ApiClient["default"].convertToType(data['lock_default_key'], 'Boolean');
        }

        if (data.hasOwnProperty('password_expiration_info')) {
          obj['password_expiration_info'] = _PasswordExpirationInfo["default"].constructFromObject(data['password_expiration_info']);
        }

        if (data.hasOwnProperty('password_policy')) {
          obj['password_policy'] = _PasswordPolicyInfo["default"].constructFromObject(data['password_policy']);
        }

        if (data.hasOwnProperty('password_score')) {
          obj['password_score'] = _PasswordScoreSetting["default"].constructFromObject(data['password_score']);
        }

        if (data.hasOwnProperty('protect_items_by_default')) {
          obj['protect_items_by_default'] = _ApiClient["default"].convertToType(data['protect_items_by_default'], 'Boolean');
        }

        if (data.hasOwnProperty('rotation_secret_max_interval')) {
          obj['rotation_secret_max_interval'] = _RotationSecretMaxInterval["default"].constructFromObject(data['rotation_secret_max_interval']);
        }

        if (data.hasOwnProperty('sharing_policy')) {
          obj['sharing_policy'] = _SharingPolicyInfo["default"].constructFromObject(data['sharing_policy']);
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>AccountGeneralSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountGeneralSettings</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['account_default_key_name'] && !(typeof data['account_default_key_name'] === 'string' || data['account_default_key_name'] instanceof String)) {
        throw new Error("Expected the field `account_default_key_name` to be a primitive type in the JSON string but got " + data['account_default_key_name']);
      } // validate the optional field `allowed_clients_ips`


      if (data['allowed_clients_ips']) {
        // data not null
        _AllowedIpSettings["default"].validateJSON(data['allowed_clients_ips']);
      } // validate the optional field `allowed_gateways_ips`


      if (data['allowed_gateways_ips']) {
        // data not null
        _AllowedIpSettings["default"].validateJSON(data['allowed_gateways_ips']);
      } // validate the optional field `auth_usage_event`


      if (data['auth_usage_event']) {
        // data not null
        _UsageEventSetting["default"].validateJSON(data['auth_usage_event']);
      } // validate the optional field `data_protection_section`


      if (data['data_protection_section']) {
        // data not null
        _DataProtectionSection["default"].validateJSON(data['data_protection_section']);
      } // validate the optional field `dynamic_secret_max_ttl`


      if (data['dynamic_secret_max_ttl']) {
        // data not null
        _DynamicSecretMaxTtl["default"].validateJSON(data['dynamic_secret_max_ttl']);
      } // ensure the json data is a string


      if (data['invalid_characters'] && !(typeof data['invalid_characters'] === 'string' || data['invalid_characters'] instanceof String)) {
        throw new Error("Expected the field `invalid_characters` to be a primitive type in the JSON string but got " + data['invalid_characters']);
      } // validate the optional field `item_usage_event`


      if (data['item_usage_event']) {
        // data not null
        _UsageEventSetting["default"].validateJSON(data['item_usage_event']);
      } // validate the optional field `password_expiration_info`


      if (data['password_expiration_info']) {
        // data not null
        _PasswordExpirationInfo["default"].validateJSON(data['password_expiration_info']);
      } // validate the optional field `password_policy`


      if (data['password_policy']) {
        // data not null
        _PasswordPolicyInfo["default"].validateJSON(data['password_policy']);
      } // validate the optional field `password_score`


      if (data['password_score']) {
        // data not null
        _PasswordScoreSetting["default"].validateJSON(data['password_score']);
      } // validate the optional field `rotation_secret_max_interval`


      if (data['rotation_secret_max_interval']) {
        // data not null
        _RotationSecretMaxInterval["default"].validateJSON(data['rotation_secret_max_interval']);
      } // validate the optional field `sharing_policy`


      if (data['sharing_policy']) {
        // data not null
        _SharingPolicyInfo["default"].validateJSON(data['sharing_policy']);
      }

      return true;
    }
  }]);

  return AccountGeneralSettings;
}();
/**
 * AccountDefaultKeyItemID is the item ID of the DFC key item configured as the default protection key
 * @member {Number} account_default_key_item_id
 */


AccountGeneralSettings.prototype['account_default_key_item_id'] = undefined;
/**
 * AccountDefaultKeyName is the name of the DFC key item configured as the default key This is here simply for the response to include the item name in addition to the display ID so the client can properly show this to the user. It will not be saved to the DB, only the AccountDefaultKeyItemID will.
 * @member {String} account_default_key_name
 */

AccountGeneralSettings.prototype['account_default_key_name'] = undefined;
/**
 * @member {module:model/AllowedIpSettings} allowed_clients_ips
 */

AccountGeneralSettings.prototype['allowed_clients_ips'] = undefined;
/**
 * @member {module:model/AllowedIpSettings} allowed_gateways_ips
 */

AccountGeneralSettings.prototype['allowed_gateways_ips'] = undefined;
/**
 * @member {module:model/UsageEventSetting} auth_usage_event
 */

AccountGeneralSettings.prototype['auth_usage_event'] = undefined;
/**
 * @member {module:model/DataProtectionSection} data_protection_section
 */

AccountGeneralSettings.prototype['data_protection_section'] = undefined;
/**
 * @member {module:model/DynamicSecretMaxTtl} dynamic_secret_max_ttl
 */

AccountGeneralSettings.prototype['dynamic_secret_max_ttl'] = undefined;
/**
 * @member {Boolean} enable_request_for_access
 */

AccountGeneralSettings.prototype['enable_request_for_access'] = undefined;
/**
 * InvalidCharacters is the invalid characters for items/targets/roles/auths/notifier_forwarder naming convention
 * @member {String} invalid_characters
 */

AccountGeneralSettings.prototype['invalid_characters'] = undefined;
/**
 * @member {module:model/UsageEventSetting} item_usage_event
 */

AccountGeneralSettings.prototype['item_usage_event'] = undefined;
/**
 * LockDefaultKey determines whether the configured default key can be updated by end-users on a per-request basis true - all requests use the configured default key false - every request can determine its protection key (default) nil - change nothing (every request can determine its protection key (default)) This parameter is only relevant if AccountDefaultKeyItemID is not empty
 * @member {Boolean} lock_default_key
 */

AccountGeneralSettings.prototype['lock_default_key'] = undefined;
/**
 * @member {module:model/PasswordExpirationInfo} password_expiration_info
 */

AccountGeneralSettings.prototype['password_expiration_info'] = undefined;
/**
 * @member {module:model/PasswordPolicyInfo} password_policy
 */

AccountGeneralSettings.prototype['password_policy'] = undefined;
/**
 * @member {module:model/PasswordScoreSetting} password_score
 */

AccountGeneralSettings.prototype['password_score'] = undefined;
/**
 * @member {Boolean} protect_items_by_default
 */

AccountGeneralSettings.prototype['protect_items_by_default'] = undefined;
/**
 * @member {module:model/RotationSecretMaxInterval} rotation_secret_max_interval
 */

AccountGeneralSettings.prototype['rotation_secret_max_interval'] = undefined;
/**
 * @member {module:model/SharingPolicyInfo} sharing_policy
 */

AccountGeneralSettings.prototype['sharing_policy'] = undefined;
var _default = AccountGeneralSettings;
exports["default"] = _default;