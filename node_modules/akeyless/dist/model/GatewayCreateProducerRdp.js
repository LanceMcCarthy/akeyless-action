"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayCreateProducerRdp model module.
 * @module model/GatewayCreateProducerRdp
 * @version 3.5.1
 */
var GatewayCreateProducerRdp = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayCreateProducerRdp</code>.
   * gatewayCreateProducerRdp is a command that creates rdp producer
   * @alias module:model/GatewayCreateProducerRdp
   * @param name {String} Producer name
   */
  function GatewayCreateProducerRdp(name) {
    _classCallCheck(this, GatewayCreateProducerRdp);

    GatewayCreateProducerRdp.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayCreateProducerRdp, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['name'] = name;
    }
    /**
     * Constructs a <code>GatewayCreateProducerRdp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayCreateProducerRdp} obj Optional instance to populate.
     * @return {module:model/GatewayCreateProducerRdp} The populated <code>GatewayCreateProducerRdp</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayCreateProducerRdp();

        if (data.hasOwnProperty('allow-user-extend-session')) {
          obj['allow-user-extend-session'] = _ApiClient["default"].convertToType(data['allow-user-extend-session'], 'Number');
        }

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('fixed-user-only')) {
          obj['fixed-user-only'] = _ApiClient["default"].convertToType(data['fixed-user-only'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('producer-encryption-key-name')) {
          obj['producer-encryption-key-name'] = _ApiClient["default"].convertToType(data['producer-encryption-key-name'], 'String');
        }

        if (data.hasOwnProperty('rdp-admin-name')) {
          obj['rdp-admin-name'] = _ApiClient["default"].convertToType(data['rdp-admin-name'], 'String');
        }

        if (data.hasOwnProperty('rdp-admin-pwd')) {
          obj['rdp-admin-pwd'] = _ApiClient["default"].convertToType(data['rdp-admin-pwd'], 'String');
        }

        if (data.hasOwnProperty('rdp-host-name')) {
          obj['rdp-host-name'] = _ApiClient["default"].convertToType(data['rdp-host-name'], 'String');
        }

        if (data.hasOwnProperty('rdp-host-port')) {
          obj['rdp-host-port'] = _ApiClient["default"].convertToType(data['rdp-host-port'], 'String');
        }

        if (data.hasOwnProperty('rdp-user-groups')) {
          obj['rdp-user-groups'] = _ApiClient["default"].convertToType(data['rdp-user-groups'], 'String');
        }

        if (data.hasOwnProperty('secure-access-allow-external-user')) {
          obj['secure-access-allow-external-user'] = _ApiClient["default"].convertToType(data['secure-access-allow-external-user'], 'Boolean');
        }

        if (data.hasOwnProperty('secure-access-enable')) {
          obj['secure-access-enable'] = _ApiClient["default"].convertToType(data['secure-access-enable'], 'String');
        }

        if (data.hasOwnProperty('secure-access-host')) {
          obj['secure-access-host'] = _ApiClient["default"].convertToType(data['secure-access-host'], ['String']);
        }

        if (data.hasOwnProperty('secure-access-rd-gateway-server')) {
          obj['secure-access-rd-gateway-server'] = _ApiClient["default"].convertToType(data['secure-access-rd-gateway-server'], 'String');
        }

        if (data.hasOwnProperty('secure-access-rdp-domain')) {
          obj['secure-access-rdp-domain'] = _ApiClient["default"].convertToType(data['secure-access-rdp-domain'], 'String');
        }

        if (data.hasOwnProperty('secure-access-rdp-user')) {
          obj['secure-access-rdp-user'] = _ApiClient["default"].convertToType(data['secure-access-rdp-user'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('user-ttl')) {
          obj['user-ttl'] = _ApiClient["default"].convertToType(data['user-ttl'], 'String');
        }

        if (data.hasOwnProperty('warn-user-before-expiration')) {
          obj['warn-user-before-expiration'] = _ApiClient["default"].convertToType(data['warn-user-before-expiration'], 'Number');
        }
      }

      return obj;
    }
  }]);

  return GatewayCreateProducerRdp;
}();
/**
 * AllowUserExtendSession
 * @member {Number} allow-user-extend-session
 */


GatewayCreateProducerRdp.prototype['allow-user-extend-session'] = undefined;
/**
 * Protection from accidental deletion of this item [true/false]
 * @member {String} delete_protection
 */

GatewayCreateProducerRdp.prototype['delete_protection'] = undefined;
/**
 * Allow access using externally (IdP) provided username [true/false]
 * @member {String} fixed-user-only
 * @default 'false'
 */

GatewayCreateProducerRdp.prototype['fixed-user-only'] = 'false';
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayCreateProducerRdp.prototype['json'] = false;
/**
 * Producer name
 * @member {String} name
 */

GatewayCreateProducerRdp.prototype['name'] = undefined;
/**
 * Dynamic producer encryption key
 * @member {String} producer-encryption-key-name
 */

GatewayCreateProducerRdp.prototype['producer-encryption-key-name'] = undefined;
/**
 * RDP Admin Name
 * @member {String} rdp-admin-name
 */

GatewayCreateProducerRdp.prototype['rdp-admin-name'] = undefined;
/**
 * RDP Admin password
 * @member {String} rdp-admin-pwd
 */

GatewayCreateProducerRdp.prototype['rdp-admin-pwd'] = undefined;
/**
 * Hostname
 * @member {String} rdp-host-name
 */

GatewayCreateProducerRdp.prototype['rdp-host-name'] = undefined;
/**
 * Port
 * @member {String} rdp-host-port
 * @default '22'
 */

GatewayCreateProducerRdp.prototype['rdp-host-port'] = '22';
/**
 * Groups
 * @member {String} rdp-user-groups
 */

GatewayCreateProducerRdp.prototype['rdp-user-groups'] = undefined;
/**
 * Allow providing external user for a domain users
 * @member {Boolean} secure-access-allow-external-user
 * @default false
 */

GatewayCreateProducerRdp.prototype['secure-access-allow-external-user'] = false;
/**
 * Enable/Disable secure remote access [true/false]
 * @member {String} secure-access-enable
 */

GatewayCreateProducerRdp.prototype['secure-access-enable'] = undefined;
/**
 * Target servers for connections (In case of Linked Target association, host(s) will inherit Linked Target hosts - Relevant only for Dynamic Secrets/producers)
 * @member {Array.<String>} secure-access-host
 */

GatewayCreateProducerRdp.prototype['secure-access-host'] = undefined;
/**
 * RD Gateway server
 * @member {String} secure-access-rd-gateway-server
 */

GatewayCreateProducerRdp.prototype['secure-access-rd-gateway-server'] = undefined;
/**
 * Required when the Dynamic Secret is used for a domain user
 * @member {String} secure-access-rdp-domain
 */

GatewayCreateProducerRdp.prototype['secure-access-rdp-domain'] = undefined;
/**
 * Override the RDP Domain username
 * @member {String} secure-access-rdp-user
 */

GatewayCreateProducerRdp.prototype['secure-access-rdp-user'] = undefined;
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

GatewayCreateProducerRdp.prototype['tags'] = undefined;
/**
 * Target name
 * @member {String} target-name
 */

GatewayCreateProducerRdp.prototype['target-name'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayCreateProducerRdp.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayCreateProducerRdp.prototype['uid-token'] = undefined;
/**
 * User TTL
 * @member {String} user-ttl
 * @default '60m'
 */

GatewayCreateProducerRdp.prototype['user-ttl'] = '60m';
/**
 * WarnBeforeUserExpiration
 * @member {Number} warn-user-before-expiration
 */

GatewayCreateProducerRdp.prototype['warn-user-before-expiration'] = undefined;
var _default = GatewayCreateProducerRdp;
exports["default"] = _default;