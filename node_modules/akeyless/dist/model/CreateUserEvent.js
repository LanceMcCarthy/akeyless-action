"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The CreateUserEvent model module.
 * @module model/CreateUserEvent
 * @version 3.4.0
 */
var CreateUserEvent = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateUserEvent</code>.
   * @alias module:model/CreateUserEvent
   * @param eventType {String} 
   * @param itemName {String} EventItemName Event item name
   * @param itemType {String} EventItemType Event item type
   */
  function CreateUserEvent(eventType, itemName, itemType) {
    _classCallCheck(this, CreateUserEvent);

    CreateUserEvent.initialize(this, eventType, itemName, itemType);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CreateUserEvent, null, [{
    key: "initialize",
    value: function initialize(obj, eventType, itemName, itemType) {
      obj['event-type'] = eventType;
      obj['item-name'] = itemName;
      obj['item-type'] = itemType;
    }
    /**
     * Constructs a <code>CreateUserEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUserEvent} obj Optional instance to populate.
     * @return {module:model/CreateUserEvent} The populated <code>CreateUserEvent</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateUserEvent();

        if (data.hasOwnProperty('capabilities')) {
          obj['capabilities'] = _ApiClient["default"].convertToType(data['capabilities'], ['String']);
        }

        if (data.hasOwnProperty('comment')) {
          obj['comment'] = _ApiClient["default"].convertToType(data['comment'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('event-source')) {
          obj['event-source'] = _ApiClient["default"].convertToType(data['event-source'], 'String');
        }

        if (data.hasOwnProperty('event-type')) {
          obj['event-type'] = _ApiClient["default"].convertToType(data['event-type'], 'String');
        }

        if (data.hasOwnProperty('item-name')) {
          obj['item-name'] = _ApiClient["default"].convertToType(data['item-name'], 'String');
        }

        if (data.hasOwnProperty('item-type')) {
          obj['item-type'] = _ApiClient["default"].convertToType(data['item-type'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('request-access-ttl')) {
          obj['request-access-ttl'] = _ApiClient["default"].convertToType(data['request-access-ttl'], 'Number');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return CreateUserEvent;
}();
/**
 * List of the required capabilities options: [read, update, delete,sra_transparently_connect]. Relevant only for request-access event types
 * @member {Array.<String>} capabilities
 */


CreateUserEvent.prototype['capabilities'] = undefined;
/**
 * Deprecated - use description
 * @member {String} comment
 */

CreateUserEvent.prototype['comment'] = undefined;
/**
 * Description of the object
 * @member {String} description
 */

CreateUserEvent.prototype['description'] = undefined;
/**
 * @member {String} event-source
 */

CreateUserEvent.prototype['event-source'] = undefined;
/**
 * @member {String} event-type
 */

CreateUserEvent.prototype['event-type'] = undefined;
/**
 * EventItemName Event item name
 * @member {String} item-name
 */

CreateUserEvent.prototype['item-name'] = undefined;
/**
 * EventItemType Event item type
 * @member {String} item-type
 */

CreateUserEvent.prototype['item-type'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

CreateUserEvent.prototype['json'] = false;
/**
 * For how long to grant the requested access, in minutes
 * @member {Number} request-access-ttl
 */

CreateUserEvent.prototype['request-access-ttl'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

CreateUserEvent.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

CreateUserEvent.prototype['uid-token'] = undefined;
var _default = CreateUserEvent;
exports["default"] = _default;