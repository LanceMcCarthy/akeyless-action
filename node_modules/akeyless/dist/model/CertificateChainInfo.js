"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _CertificateExpirationEvent = _interopRequireDefault(require("./CertificateExpirationEvent"));

var _CertificateInfo = _interopRequireDefault(require("./CertificateInfo"));

var _NullString = _interopRequireDefault(require("./NullString"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The CertificateChainInfo model module.
 * @module model/CertificateChainInfo
 * @version 5.0.5
 */
var CertificateChainInfo = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CertificateChainInfo</code>.
   * @alias module:model/CertificateChainInfo
   */
  function CertificateChainInfo() {
    _classCallCheck(this, CertificateChainInfo);

    CertificateChainInfo.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CertificateChainInfo, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>CertificateChainInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateChainInfo} obj Optional instance to populate.
     * @return {module:model/CertificateChainInfo} The populated <code>CertificateChainInfo</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CertificateChainInfo();

        if (data.hasOwnProperty('auto_renew_certificate')) {
          obj['auto_renew_certificate'] = _ApiClient["default"].convertToType(data['auto_renew_certificate'], 'Boolean');
        }

        if (data.hasOwnProperty('certificate_chain')) {
          obj['certificate_chain'] = _ApiClient["default"].convertToType(data['certificate_chain'], [_CertificateInfo["default"]]);
        }

        if (data.hasOwnProperty('certificate_format')) {
          obj['certificate_format'] = _ApiClient["default"].convertToType(data['certificate_format'], 'String');
        }

        if (data.hasOwnProperty('certificate_has_private_key')) {
          obj['certificate_has_private_key'] = _ApiClient["default"].convertToType(data['certificate_has_private_key'], 'Boolean');
        }

        if (data.hasOwnProperty('certificate_issuer_gw_cluster_id')) {
          obj['certificate_issuer_gw_cluster_id'] = _ApiClient["default"].convertToType(data['certificate_issuer_gw_cluster_id'], 'Number');
        }

        if (data.hasOwnProperty('certificate_issuer_gw_cluster_url')) {
          obj['certificate_issuer_gw_cluster_url'] = _ApiClient["default"].convertToType(data['certificate_issuer_gw_cluster_url'], 'String');
        }

        if (data.hasOwnProperty('certificate_issuer_item_id')) {
          obj['certificate_issuer_item_id'] = _ApiClient["default"].convertToType(data['certificate_issuer_item_id'], 'Number');
        }

        if (data.hasOwnProperty('certificate_issuer_name')) {
          obj['certificate_issuer_name'] = _ApiClient["default"].convertToType(data['certificate_issuer_name'], 'String');
        }

        if (data.hasOwnProperty('certificate_pem')) {
          obj['certificate_pem'] = _ApiClient["default"].convertToType(data['certificate_pem'], 'String');
        }

        if (data.hasOwnProperty('certificate_status')) {
          obj['certificate_status'] = _ApiClient["default"].convertToType(data['certificate_status'], 'String');
        }

        if (data.hasOwnProperty('common_name')) {
          obj['common_name'] = _ApiClient["default"].convertToType(data['common_name'], 'String');
        }

        if (data.hasOwnProperty('error_message')) {
          obj['error_message'] = _ApiClient["default"].convertToType(data['error_message'], 'String');
        }

        if (data.hasOwnProperty('expiration_date')) {
          obj['expiration_date'] = _ApiClient["default"].convertToType(data['expiration_date'], 'Date');
        }

        if (data.hasOwnProperty('expiration_events')) {
          obj['expiration_events'] = _ApiClient["default"].convertToType(data['expiration_events'], [_CertificateExpirationEvent["default"]]);
        }

        if (data.hasOwnProperty('external_ca_id')) {
          obj['external_ca_id'] = _NullString["default"].constructFromObject(data['external_ca_id']);
        }

        if (data.hasOwnProperty('issuance_status')) {
          obj['issuance_status'] = _ApiClient["default"].convertToType(data['issuance_status'], 'String');
        }

        if (data.hasOwnProperty('not_before')) {
          obj['not_before'] = _ApiClient["default"].convertToType(data['not_before'], 'Date');
        }

        if (data.hasOwnProperty('renew_before_expiration_in_days')) {
          obj['renew_before_expiration_in_days'] = _ApiClient["default"].convertToType(data['renew_before_expiration_in_days'], 'Number');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>CertificateChainInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateChainInfo</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      if (data['certificate_chain']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['certificate_chain'])) {
          throw new Error("Expected the field `certificate_chain` to be an array in the JSON data but got " + data['certificate_chain']);
        } // validate the optional field `certificate_chain` (array)


        var _iterator = _createForOfIteratorHelper(data['certificate_chain']),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            _CertificateInfo["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      } // ensure the json data is a string


      if (data['certificate_format'] && !(typeof data['certificate_format'] === 'string' || data['certificate_format'] instanceof String)) {
        throw new Error("Expected the field `certificate_format` to be a primitive type in the JSON string but got " + data['certificate_format']);
      } // ensure the json data is a string


      if (data['certificate_issuer_gw_cluster_url'] && !(typeof data['certificate_issuer_gw_cluster_url'] === 'string' || data['certificate_issuer_gw_cluster_url'] instanceof String)) {
        throw new Error("Expected the field `certificate_issuer_gw_cluster_url` to be a primitive type in the JSON string but got " + data['certificate_issuer_gw_cluster_url']);
      } // ensure the json data is a string


      if (data['certificate_issuer_name'] && !(typeof data['certificate_issuer_name'] === 'string' || data['certificate_issuer_name'] instanceof String)) {
        throw new Error("Expected the field `certificate_issuer_name` to be a primitive type in the JSON string but got " + data['certificate_issuer_name']);
      } // ensure the json data is a string


      if (data['certificate_pem'] && !(typeof data['certificate_pem'] === 'string' || data['certificate_pem'] instanceof String)) {
        throw new Error("Expected the field `certificate_pem` to be a primitive type in the JSON string but got " + data['certificate_pem']);
      } // ensure the json data is a string


      if (data['certificate_status'] && !(typeof data['certificate_status'] === 'string' || data['certificate_status'] instanceof String)) {
        throw new Error("Expected the field `certificate_status` to be a primitive type in the JSON string but got " + data['certificate_status']);
      } // ensure the json data is a string


      if (data['common_name'] && !(typeof data['common_name'] === 'string' || data['common_name'] instanceof String)) {
        throw new Error("Expected the field `common_name` to be a primitive type in the JSON string but got " + data['common_name']);
      } // ensure the json data is a string


      if (data['error_message'] && !(typeof data['error_message'] === 'string' || data['error_message'] instanceof String)) {
        throw new Error("Expected the field `error_message` to be a primitive type in the JSON string but got " + data['error_message']);
      }

      if (data['expiration_events']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['expiration_events'])) {
          throw new Error("Expected the field `expiration_events` to be an array in the JSON data but got " + data['expiration_events']);
        } // validate the optional field `expiration_events` (array)


        var _iterator2 = _createForOfIteratorHelper(data['expiration_events']),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _item = _step2.value;

            _CertificateExpirationEvent["default"].validateJSON(_item);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        ;
      } // validate the optional field `external_ca_id`


      if (data['external_ca_id']) {
        // data not null
        _NullString["default"].validateJSON(data['external_ca_id']);
      } // ensure the json data is a string


      if (data['issuance_status'] && !(typeof data['issuance_status'] === 'string' || data['issuance_status'] instanceof String)) {
        throw new Error("Expected the field `issuance_status` to be a primitive type in the JSON string but got " + data['issuance_status']);
      }

      return true;
    }
  }]);

  return CertificateChainInfo;
}();
/**
 * @member {Boolean} auto_renew_certificate
 */


CertificateChainInfo.prototype['auto_renew_certificate'] = undefined;
/**
 * @member {Array.<module:model/CertificateInfo>} certificate_chain
 */

CertificateChainInfo.prototype['certificate_chain'] = undefined;
/**
 * @member {String} certificate_format
 */

CertificateChainInfo.prototype['certificate_format'] = undefined;
/**
 * @member {Boolean} certificate_has_private_key
 */

CertificateChainInfo.prototype['certificate_has_private_key'] = undefined;
/**
 * @member {Number} certificate_issuer_gw_cluster_id
 */

CertificateChainInfo.prototype['certificate_issuer_gw_cluster_id'] = undefined;
/**
 * @member {String} certificate_issuer_gw_cluster_url
 */

CertificateChainInfo.prototype['certificate_issuer_gw_cluster_url'] = undefined;
/**
 * @member {Number} certificate_issuer_item_id
 */

CertificateChainInfo.prototype['certificate_issuer_item_id'] = undefined;
/**
 * @member {String} certificate_issuer_name
 */

CertificateChainInfo.prototype['certificate_issuer_name'] = undefined;
/**
 * @member {String} certificate_pem
 */

CertificateChainInfo.prototype['certificate_pem'] = undefined;
/**
 * @member {String} certificate_status
 */

CertificateChainInfo.prototype['certificate_status'] = undefined;
/**
 * @member {String} common_name
 */

CertificateChainInfo.prototype['common_name'] = undefined;
/**
 * @member {String} error_message
 */

CertificateChainInfo.prototype['error_message'] = undefined;
/**
 * @member {Date} expiration_date
 */

CertificateChainInfo.prototype['expiration_date'] = undefined;
/**
 * @member {Array.<module:model/CertificateExpirationEvent>} expiration_events
 */

CertificateChainInfo.prototype['expiration_events'] = undefined;
/**
 * @member {module:model/NullString} external_ca_id
 */

CertificateChainInfo.prototype['external_ca_id'] = undefined;
/**
 * @member {String} issuance_status
 */

CertificateChainInfo.prototype['issuance_status'] = undefined;
/**
 * @member {Date} not_before
 */

CertificateChainInfo.prototype['not_before'] = undefined;
/**
 * @member {Number} renew_before_expiration_in_days
 */

CertificateChainInfo.prototype['renew_before_expiration_in_days'] = undefined;
var _default = CertificateChainInfo;
exports["default"] = _default;