"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The LdapConfigPart model module.
 * @module model/LdapConfigPart
 * @version 5.0.0
 */
var LdapConfigPart = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>LdapConfigPart</code>.
   * @alias module:model/LdapConfigPart
   */
  function LdapConfigPart() {
    _classCallCheck(this, LdapConfigPart);

    LdapConfigPart.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(LdapConfigPart, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>LdapConfigPart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LdapConfigPart} obj Optional instance to populate.
     * @return {module:model/LdapConfigPart} The populated <code>LdapConfigPart</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new LdapConfigPart();

        if (data.hasOwnProperty('ldap_access_id')) {
          obj['ldap_access_id'] = _ApiClient["default"].convertToType(data['ldap_access_id'], 'String');
        }

        if (data.hasOwnProperty('ldap_anonymous_search')) {
          obj['ldap_anonymous_search'] = _ApiClient["default"].convertToType(data['ldap_anonymous_search'], 'Boolean');
        }

        if (data.hasOwnProperty('ldap_bind_dn')) {
          obj['ldap_bind_dn'] = _ApiClient["default"].convertToType(data['ldap_bind_dn'], 'String');
        }

        if (data.hasOwnProperty('ldap_bind_password')) {
          obj['ldap_bind_password'] = _ApiClient["default"].convertToType(data['ldap_bind_password'], 'String');
        }

        if (data.hasOwnProperty('ldap_cert')) {
          obj['ldap_cert'] = _ApiClient["default"].convertToType(data['ldap_cert'], 'String');
        }

        if (data.hasOwnProperty('ldap_enable')) {
          obj['ldap_enable'] = _ApiClient["default"].convertToType(data['ldap_enable'], 'Boolean');
        }

        if (data.hasOwnProperty('ldap_group_attr')) {
          obj['ldap_group_attr'] = _ApiClient["default"].convertToType(data['ldap_group_attr'], 'String');
        }

        if (data.hasOwnProperty('ldap_group_dn')) {
          obj['ldap_group_dn'] = _ApiClient["default"].convertToType(data['ldap_group_dn'], 'String');
        }

        if (data.hasOwnProperty('ldap_group_filter')) {
          obj['ldap_group_filter'] = _ApiClient["default"].convertToType(data['ldap_group_filter'], 'String');
        }

        if (data.hasOwnProperty('ldap_private_key')) {
          obj['ldap_private_key'] = _ApiClient["default"].convertToType(data['ldap_private_key'], 'String');
        }

        if (data.hasOwnProperty('ldap_token_expiration')) {
          obj['ldap_token_expiration'] = _ApiClient["default"].convertToType(data['ldap_token_expiration'], 'String');
        }

        if (data.hasOwnProperty('ldap_url')) {
          obj['ldap_url'] = _ApiClient["default"].convertToType(data['ldap_url'], 'String');
        }

        if (data.hasOwnProperty('ldap_user_attr')) {
          obj['ldap_user_attr'] = _ApiClient["default"].convertToType(data['ldap_user_attr'], 'String');
        }

        if (data.hasOwnProperty('ldap_user_dn')) {
          obj['ldap_user_dn'] = _ApiClient["default"].convertToType(data['ldap_user_dn'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>LdapConfigPart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LdapConfigPart</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['ldap_access_id'] && !(typeof data['ldap_access_id'] === 'string' || data['ldap_access_id'] instanceof String)) {
        throw new Error("Expected the field `ldap_access_id` to be a primitive type in the JSON string but got " + data['ldap_access_id']);
      } // ensure the json data is a string


      if (data['ldap_bind_dn'] && !(typeof data['ldap_bind_dn'] === 'string' || data['ldap_bind_dn'] instanceof String)) {
        throw new Error("Expected the field `ldap_bind_dn` to be a primitive type in the JSON string but got " + data['ldap_bind_dn']);
      } // ensure the json data is a string


      if (data['ldap_bind_password'] && !(typeof data['ldap_bind_password'] === 'string' || data['ldap_bind_password'] instanceof String)) {
        throw new Error("Expected the field `ldap_bind_password` to be a primitive type in the JSON string but got " + data['ldap_bind_password']);
      } // ensure the json data is a string


      if (data['ldap_cert'] && !(typeof data['ldap_cert'] === 'string' || data['ldap_cert'] instanceof String)) {
        throw new Error("Expected the field `ldap_cert` to be a primitive type in the JSON string but got " + data['ldap_cert']);
      } // ensure the json data is a string


      if (data['ldap_group_attr'] && !(typeof data['ldap_group_attr'] === 'string' || data['ldap_group_attr'] instanceof String)) {
        throw new Error("Expected the field `ldap_group_attr` to be a primitive type in the JSON string but got " + data['ldap_group_attr']);
      } // ensure the json data is a string


      if (data['ldap_group_dn'] && !(typeof data['ldap_group_dn'] === 'string' || data['ldap_group_dn'] instanceof String)) {
        throw new Error("Expected the field `ldap_group_dn` to be a primitive type in the JSON string but got " + data['ldap_group_dn']);
      } // ensure the json data is a string


      if (data['ldap_group_filter'] && !(typeof data['ldap_group_filter'] === 'string' || data['ldap_group_filter'] instanceof String)) {
        throw new Error("Expected the field `ldap_group_filter` to be a primitive type in the JSON string but got " + data['ldap_group_filter']);
      } // ensure the json data is a string


      if (data['ldap_private_key'] && !(typeof data['ldap_private_key'] === 'string' || data['ldap_private_key'] instanceof String)) {
        throw new Error("Expected the field `ldap_private_key` to be a primitive type in the JSON string but got " + data['ldap_private_key']);
      } // ensure the json data is a string


      if (data['ldap_token_expiration'] && !(typeof data['ldap_token_expiration'] === 'string' || data['ldap_token_expiration'] instanceof String)) {
        throw new Error("Expected the field `ldap_token_expiration` to be a primitive type in the JSON string but got " + data['ldap_token_expiration']);
      } // ensure the json data is a string


      if (data['ldap_url'] && !(typeof data['ldap_url'] === 'string' || data['ldap_url'] instanceof String)) {
        throw new Error("Expected the field `ldap_url` to be a primitive type in the JSON string but got " + data['ldap_url']);
      } // ensure the json data is a string


      if (data['ldap_user_attr'] && !(typeof data['ldap_user_attr'] === 'string' || data['ldap_user_attr'] instanceof String)) {
        throw new Error("Expected the field `ldap_user_attr` to be a primitive type in the JSON string but got " + data['ldap_user_attr']);
      } // ensure the json data is a string


      if (data['ldap_user_dn'] && !(typeof data['ldap_user_dn'] === 'string' || data['ldap_user_dn'] instanceof String)) {
        throw new Error("Expected the field `ldap_user_dn` to be a primitive type in the JSON string but got " + data['ldap_user_dn']);
      }

      return true;
    }
  }]);

  return LdapConfigPart;
}();
/**
 * @member {String} ldap_access_id
 */


LdapConfigPart.prototype['ldap_access_id'] = undefined;
/**
 * @member {Boolean} ldap_anonymous_search
 */

LdapConfigPart.prototype['ldap_anonymous_search'] = undefined;
/**
 * @member {String} ldap_bind_dn
 */

LdapConfigPart.prototype['ldap_bind_dn'] = undefined;
/**
 * @member {String} ldap_bind_password
 */

LdapConfigPart.prototype['ldap_bind_password'] = undefined;
/**
 * @member {String} ldap_cert
 */

LdapConfigPart.prototype['ldap_cert'] = undefined;
/**
 * @member {Boolean} ldap_enable
 */

LdapConfigPart.prototype['ldap_enable'] = undefined;
/**
 * @member {String} ldap_group_attr
 */

LdapConfigPart.prototype['ldap_group_attr'] = undefined;
/**
 * @member {String} ldap_group_dn
 */

LdapConfigPart.prototype['ldap_group_dn'] = undefined;
/**
 * @member {String} ldap_group_filter
 */

LdapConfigPart.prototype['ldap_group_filter'] = undefined;
/**
 * @member {String} ldap_private_key
 */

LdapConfigPart.prototype['ldap_private_key'] = undefined;
/**
 * @member {String} ldap_token_expiration
 */

LdapConfigPart.prototype['ldap_token_expiration'] = undefined;
/**
 * @member {String} ldap_url
 */

LdapConfigPart.prototype['ldap_url'] = undefined;
/**
 * @member {String} ldap_user_attr
 */

LdapConfigPart.prototype['ldap_user_attr'] = undefined;
/**
 * @member {String} ldap_user_dn
 */

LdapConfigPart.prototype['ldap_user_dn'] = undefined;
var _default = LdapConfigPart;
exports["default"] = _default;