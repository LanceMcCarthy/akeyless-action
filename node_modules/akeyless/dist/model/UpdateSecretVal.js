"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The UpdateSecretVal model module.
 * @module model/UpdateSecretVal
 * @version 3.6.3
 */
var UpdateSecretVal = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>UpdateSecretVal</code>.
   * @alias module:model/UpdateSecretVal
   * @param name {String} Secret name
   * @param value {String} The secret value (relevant only for type 'generic')
   */
  function UpdateSecretVal(name, value) {
    _classCallCheck(this, UpdateSecretVal);

    UpdateSecretVal.initialize(this, name, value);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(UpdateSecretVal, null, [{
    key: "initialize",
    value: function initialize(obj, name, value) {
      obj['name'] = name;
      obj['value'] = value;
    }
    /**
     * Constructs a <code>UpdateSecretVal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSecretVal} obj Optional instance to populate.
     * @return {module:model/UpdateSecretVal} The populated <code>UpdateSecretVal</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new UpdateSecretVal();

        if (data.hasOwnProperty('accessibility')) {
          obj['accessibility'] = _ApiClient["default"].convertToType(data['accessibility'], 'String');
        }

        if (data.hasOwnProperty('custom-field')) {
          obj['custom-field'] = _ApiClient["default"].convertToType(data['custom-field'], {
            'String': 'String'
          });
        }

        if (data.hasOwnProperty('format')) {
          obj['format'] = _ApiClient["default"].convertToType(data['format'], 'String');
        }

        if (data.hasOwnProperty('inject-url')) {
          obj['inject-url'] = _ApiClient["default"].convertToType(data['inject-url'], ['String']);
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('keep-prev-version')) {
          obj['keep-prev-version'] = _ApiClient["default"].convertToType(data['keep-prev-version'], 'String');
        }

        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
        }

        if (data.hasOwnProperty('last-version')) {
          obj['last-version'] = _ApiClient["default"].convertToType(data['last-version'], 'Number');
        }

        if (data.hasOwnProperty('multiline')) {
          obj['multiline'] = _ApiClient["default"].convertToType(data['multiline'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('new-version')) {
          obj['new-version'] = _ApiClient["default"].convertToType(data['new-version'], 'Boolean');
        }

        if (data.hasOwnProperty('password')) {
          obj['password'] = _ApiClient["default"].convertToType(data['password'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('username')) {
          obj['username'] = _ApiClient["default"].convertToType(data['username'], 'String');
        }

        if (data.hasOwnProperty('value')) {
          obj['value'] = _ApiClient["default"].convertToType(data['value'], 'String');
        }
      }

      return obj;
    }
  }]);

  return UpdateSecretVal;
}();
/**
 * for personal password manager
 * @member {String} accessibility
 * @default 'regular'
 */


UpdateSecretVal.prototype['accessibility'] = 'regular';
/**
 * For Password Management use, additional fields
 * @member {Object.<String, String>} custom-field
 */

UpdateSecretVal.prototype['custom-field'] = undefined;
/**
 * Secret format [text/json] (relevant only for type 'generic')
 * @member {String} format
 * @default 'text'
 */

UpdateSecretVal.prototype['format'] = 'text';
/**
 * For Password Management use, reflect the website context
 * @member {Array.<String>} inject-url
 */

UpdateSecretVal.prototype['inject-url'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

UpdateSecretVal.prototype['json'] = false;
/**
 * Whether to keep previous version [true/false]. If not set, use default according to account settings
 * @member {String} keep-prev-version
 */

UpdateSecretVal.prototype['keep-prev-version'] = undefined;
/**
 * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
 * @member {String} key
 */

UpdateSecretVal.prototype['key'] = undefined;
/**
 * The last version number before the update
 * @member {Number} last-version
 */

UpdateSecretVal.prototype['last-version'] = undefined;
/**
 * The provided value is a multiline value (separated by '\\n')
 * @member {Boolean} multiline
 */

UpdateSecretVal.prototype['multiline'] = undefined;
/**
 * Secret name
 * @member {String} name
 */

UpdateSecretVal.prototype['name'] = undefined;
/**
 * Deprecated
 * @member {Boolean} new-version
 */

UpdateSecretVal.prototype['new-version'] = undefined;
/**
 * For Password Management use, additional fields
 * @member {String} password
 */

UpdateSecretVal.prototype['password'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

UpdateSecretVal.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

UpdateSecretVal.prototype['uid-token'] = undefined;
/**
 * For Password Management use
 * @member {String} username
 */

UpdateSecretVal.prototype['username'] = undefined;
/**
 * The secret value (relevant only for type 'generic')
 * @member {String} value
 */

UpdateSecretVal.prototype['value'] = undefined;
var _default = UpdateSecretVal;
exports["default"] = _default;