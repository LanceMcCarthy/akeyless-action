"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayCreateProducerCassandra model module.
 * @module model/GatewayCreateProducerCassandra
 * @version 4.1.0
 */
var GatewayCreateProducerCassandra = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayCreateProducerCassandra</code>.
   * gatewayCreateProducerCassandra is a command that creates a Cassandra producer [Deprecated: Use dynamic-secret-create-cassandra command]
   * @alias module:model/GatewayCreateProducerCassandra
   * @param name {String} Dynamic secret name
   */
  function GatewayCreateProducerCassandra(name) {
    _classCallCheck(this, GatewayCreateProducerCassandra);

    GatewayCreateProducerCassandra.initialize(this, name);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayCreateProducerCassandra, null, [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['name'] = name;
    }
    /**
     * Constructs a <code>GatewayCreateProducerCassandra</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayCreateProducerCassandra} obj Optional instance to populate.
     * @return {module:model/GatewayCreateProducerCassandra} The populated <code>GatewayCreateProducerCassandra</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayCreateProducerCassandra();

        if (data.hasOwnProperty('cassandra-creation-statements')) {
          obj['cassandra-creation-statements'] = _ApiClient["default"].convertToType(data['cassandra-creation-statements'], 'String');
        }

        if (data.hasOwnProperty('cassandra-hosts')) {
          obj['cassandra-hosts'] = _ApiClient["default"].convertToType(data['cassandra-hosts'], 'String');
        }

        if (data.hasOwnProperty('cassandra-password')) {
          obj['cassandra-password'] = _ApiClient["default"].convertToType(data['cassandra-password'], 'String');
        }

        if (data.hasOwnProperty('cassandra-port')) {
          obj['cassandra-port'] = _ApiClient["default"].convertToType(data['cassandra-port'], 'String');
        }

        if (data.hasOwnProperty('cassandra-username')) {
          obj['cassandra-username'] = _ApiClient["default"].convertToType(data['cassandra-username'], 'String');
        }

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('password-length')) {
          obj['password-length'] = _ApiClient["default"].convertToType(data['password-length'], 'String');
        }

        if (data.hasOwnProperty('producer-encryption-key-name')) {
          obj['producer-encryption-key-name'] = _ApiClient["default"].convertToType(data['producer-encryption-key-name'], 'String');
        }

        if (data.hasOwnProperty('ssl')) {
          obj['ssl'] = _ApiClient["default"].convertToType(data['ssl'], 'Boolean');
        }

        if (data.hasOwnProperty('ssl-certificate')) {
          obj['ssl-certificate'] = _ApiClient["default"].convertToType(data['ssl-certificate'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('user-ttl')) {
          obj['user-ttl'] = _ApiClient["default"].convertToType(data['user-ttl'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayCreateProducerCassandra;
}();
/**
 * Cassandra creation statements
 * @member {String} cassandra-creation-statements
 */


GatewayCreateProducerCassandra.prototype['cassandra-creation-statements'] = undefined;
/**
 * Cassandra hosts IP or addresses, comma separated
 * @member {String} cassandra-hosts
 */

GatewayCreateProducerCassandra.prototype['cassandra-hosts'] = undefined;
/**
 * Cassandra superuser password
 * @member {String} cassandra-password
 */

GatewayCreateProducerCassandra.prototype['cassandra-password'] = undefined;
/**
 * Cassandra port
 * @member {String} cassandra-port
 * @default '9042'
 */

GatewayCreateProducerCassandra.prototype['cassandra-port'] = '9042';
/**
 * Cassandra superuser username
 * @member {String} cassandra-username
 */

GatewayCreateProducerCassandra.prototype['cassandra-username'] = undefined;
/**
 * Protection from accidental deletion of this item [true/false]
 * @member {String} delete_protection
 */

GatewayCreateProducerCassandra.prototype['delete_protection'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayCreateProducerCassandra.prototype['json'] = false;
/**
 * Dynamic secret name
 * @member {String} name
 */

GatewayCreateProducerCassandra.prototype['name'] = undefined;
/**
 * The length of the password to be generated
 * @member {String} password-length
 */

GatewayCreateProducerCassandra.prototype['password-length'] = undefined;
/**
 * Dynamic producer encryption key
 * @member {String} producer-encryption-key-name
 */

GatewayCreateProducerCassandra.prototype['producer-encryption-key-name'] = undefined;
/**
 * Enable/Disable SSL [true/false]
 * @member {Boolean} ssl
 * @default false
 */

GatewayCreateProducerCassandra.prototype['ssl'] = false;
/**
 * SSL CA certificate in base64 encoding generated from a trusted Certificate Authority (CA)
 * @member {String} ssl-certificate
 */

GatewayCreateProducerCassandra.prototype['ssl-certificate'] = undefined;
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

GatewayCreateProducerCassandra.prototype['tags'] = undefined;
/**
 * Target name
 * @member {String} target-name
 */

GatewayCreateProducerCassandra.prototype['target-name'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayCreateProducerCassandra.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayCreateProducerCassandra.prototype['uid-token'] = undefined;
/**
 * User TTL
 * @member {String} user-ttl
 * @default '60m'
 */

GatewayCreateProducerCassandra.prototype['user-ttl'] = '60m';
var _default = GatewayCreateProducerCassandra;
exports["default"] = _default;