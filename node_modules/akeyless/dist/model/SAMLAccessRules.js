"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _SAMLAttribute = _interopRequireDefault(require("./SAMLAttribute"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The SAMLAccessRules model module.
 * @module model/SAMLAccessRules
 * @version 3.3.12
 */
var SAMLAccessRules = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SAMLAccessRules</code>.
   * @alias module:model/SAMLAccessRules
   */
  function SAMLAccessRules() {
    _classCallCheck(this, SAMLAccessRules);

    SAMLAccessRules.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(SAMLAccessRules, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>SAMLAccessRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SAMLAccessRules} obj Optional instance to populate.
     * @return {module:model/SAMLAccessRules} The populated <code>SAMLAccessRules</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SAMLAccessRules();

        if (data.hasOwnProperty('allowed_redirect_URIs')) {
          obj['allowed_redirect_URIs'] = _ApiClient["default"].convertToType(data['allowed_redirect_URIs'], ['String']);
        }

        if (data.hasOwnProperty('bound_attributes')) {
          obj['bound_attributes'] = _ApiClient["default"].convertToType(data['bound_attributes'], [_SAMLAttribute["default"]]);
        }

        if (data.hasOwnProperty('idp_metadata_url')) {
          obj['idp_metadata_url'] = _ApiClient["default"].convertToType(data['idp_metadata_url'], 'String');
        }

        if (data.hasOwnProperty('idp_metadata_xml')) {
          obj['idp_metadata_xml'] = _ApiClient["default"].convertToType(data['idp_metadata_xml'], 'String');
        }

        if (data.hasOwnProperty('unique_identifier')) {
          obj['unique_identifier'] = _ApiClient["default"].convertToType(data['unique_identifier'], 'String');
        }
      }

      return obj;
    }
  }]);

  return SAMLAccessRules;
}();
/**
 * Allowed redirect URIs after the authentication
 * @member {Array.<String>} allowed_redirect_URIs
 */


SAMLAccessRules.prototype['allowed_redirect_URIs'] = undefined;
/**
 * The attributes that login is restricted to.
 * @member {Array.<module:model/SAMLAttribute>} bound_attributes
 */

SAMLAccessRules.prototype['bound_attributes'] = undefined;
/**
 * IDP metadata url
 * @member {String} idp_metadata_url
 */

SAMLAccessRules.prototype['idp_metadata_url'] = undefined;
/**
 * IDP metadata XML
 * @member {String} idp_metadata_xml
 */

SAMLAccessRules.prototype['idp_metadata_xml'] = undefined;
/**
 * A unique identifier to distinguish different users
 * @member {String} unique_identifier
 */

SAMLAccessRules.prototype['unique_identifier'] = undefined;
var _default = SAMLAccessRules;
exports["default"] = _default;