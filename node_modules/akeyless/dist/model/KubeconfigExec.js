"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The KubeconfigExec model module.
 * @module model/KubeconfigExec
 * @version 5.0.6
 */
var KubeconfigExec = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>KubeconfigExec</code>.
   * @alias module:model/KubeconfigExec
   */
  function KubeconfigExec() {
    _classCallCheck(this, KubeconfigExec);

    KubeconfigExec.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(KubeconfigExec, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>KubeconfigExec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KubeconfigExec} obj Optional instance to populate.
     * @return {module:model/KubeconfigExec} The populated <code>KubeconfigExec</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new KubeconfigExec();

        if (data.hasOwnProperty('apiVersion')) {
          obj['apiVersion'] = _ApiClient["default"].convertToType(data['apiVersion'], 'String');
        }

        if (data.hasOwnProperty('args')) {
          obj['args'] = _ApiClient["default"].convertToType(data['args'], ['String']);
        }

        if (data.hasOwnProperty('command')) {
          obj['command'] = _ApiClient["default"].convertToType(data['command'], 'String');
        }

        if (data.hasOwnProperty('interactiveMode')) {
          obj['interactiveMode'] = _ApiClient["default"].convertToType(data['interactiveMode'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>KubeconfigExec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KubeconfigExec</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
        throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
      } // ensure the json data is an array


      if (!Array.isArray(data['args'])) {
        throw new Error("Expected the field `args` to be an array in the JSON data but got " + data['args']);
      } // ensure the json data is a string


      if (data['command'] && !(typeof data['command'] === 'string' || data['command'] instanceof String)) {
        throw new Error("Expected the field `command` to be a primitive type in the JSON string but got " + data['command']);
      } // ensure the json data is a string


      if (data['interactiveMode'] && !(typeof data['interactiveMode'] === 'string' || data['interactiveMode'] instanceof String)) {
        throw new Error("Expected the field `interactiveMode` to be a primitive type in the JSON string but got " + data['interactiveMode']);
      }

      return true;
    }
  }]);

  return KubeconfigExec;
}();
/**
 * @member {String} apiVersion
 */


KubeconfigExec.prototype['apiVersion'] = undefined;
/**
 * @member {Array.<String>} args
 */

KubeconfigExec.prototype['args'] = undefined;
/**
 * @member {String} command
 */

KubeconfigExec.prototype['command'] = undefined;
/**
 * @member {String} interactiveMode
 */

KubeconfigExec.prototype['interactiveMode'] = undefined;
var _default = KubeconfigExec;
exports["default"] = _default;