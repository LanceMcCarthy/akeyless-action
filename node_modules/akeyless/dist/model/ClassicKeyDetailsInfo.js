"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ClassicKeyTargetInfo = _interopRequireDefault(require("./ClassicKeyTargetInfo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ClassicKeyDetailsInfo model module.
 * @module model/ClassicKeyDetailsInfo
 * @version 5.0.0
 */
var ClassicKeyDetailsInfo = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ClassicKeyDetailsInfo</code>.
   * @alias module:model/ClassicKeyDetailsInfo
   */
  function ClassicKeyDetailsInfo() {
    _classCallCheck(this, ClassicKeyDetailsInfo);

    ClassicKeyDetailsInfo.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ClassicKeyDetailsInfo, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>ClassicKeyDetailsInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClassicKeyDetailsInfo} obj Optional instance to populate.
     * @return {module:model/ClassicKeyDetailsInfo} The populated <code>ClassicKeyDetailsInfo</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ClassicKeyDetailsInfo();

        if (data.hasOwnProperty('classic_key_attributes')) {
          obj['classic_key_attributes'] = _ApiClient["default"].convertToType(data['classic_key_attributes'], {
            'String': ['String']
          });
        }

        if (data.hasOwnProperty('classic_key_id')) {
          obj['classic_key_id'] = _ApiClient["default"].convertToType(data['classic_key_id'], 'String');
        }

        if (data.hasOwnProperty('credential_id')) {
          obj['credential_id'] = _ApiClient["default"].convertToType(data['credential_id'], 'String');
        }

        if (data.hasOwnProperty('gw_cluster_id')) {
          obj['gw_cluster_id'] = _ApiClient["default"].convertToType(data['gw_cluster_id'], 'Number');
        }

        if (data.hasOwnProperty('has_certificate')) {
          obj['has_certificate'] = _ApiClient["default"].convertToType(data['has_certificate'], 'Boolean');
        }

        if (data.hasOwnProperty('is_provided_by_user')) {
          obj['is_provided_by_user'] = _ApiClient["default"].convertToType(data['is_provided_by_user'], 'Boolean');
        }

        if (data.hasOwnProperty('is_unexportable')) {
          obj['is_unexportable'] = _ApiClient["default"].convertToType(data['is_unexportable'], 'Boolean');
        }

        if (data.hasOwnProperty('key_state')) {
          obj['key_state'] = _ApiClient["default"].convertToType(data['key_state'], 'String');
        }

        if (data.hasOwnProperty('key_type')) {
          obj['key_type'] = _ApiClient["default"].convertToType(data['key_type'], 'String');
        }

        if (data.hasOwnProperty('last_error')) {
          obj['last_error'] = _ApiClient["default"].convertToType(data['last_error'], 'String');
        }

        if (data.hasOwnProperty('public_key')) {
          obj['public_key'] = _ApiClient["default"].convertToType(data['public_key'], 'String');
        }

        if (data.hasOwnProperty('target_alias_helper')) {
          obj['target_alias_helper'] = _ApiClient["default"].convertToType(data['target_alias_helper'], 'String');
        }

        if (data.hasOwnProperty('target_types')) {
          obj['target_types'] = _ApiClient["default"].convertToType(data['target_types'], ['String']);
        }

        if (data.hasOwnProperty('targets')) {
          obj['targets'] = _ApiClient["default"].convertToType(data['targets'], [_ClassicKeyTargetInfo["default"]]);
        }

        if (data.hasOwnProperty('username')) {
          obj['username'] = _ApiClient["default"].convertToType(data['username'], 'String');
        }

        if (data.hasOwnProperty('websites')) {
          obj['websites'] = _ApiClient["default"].convertToType(data['websites'], ['String']);
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>ClassicKeyDetailsInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClassicKeyDetailsInfo</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['classic_key_id'] && !(typeof data['classic_key_id'] === 'string' || data['classic_key_id'] instanceof String)) {
        throw new Error("Expected the field `classic_key_id` to be a primitive type in the JSON string but got " + data['classic_key_id']);
      } // ensure the json data is a string


      if (data['credential_id'] && !(typeof data['credential_id'] === 'string' || data['credential_id'] instanceof String)) {
        throw new Error("Expected the field `credential_id` to be a primitive type in the JSON string but got " + data['credential_id']);
      } // ensure the json data is a string


      if (data['key_state'] && !(typeof data['key_state'] === 'string' || data['key_state'] instanceof String)) {
        throw new Error("Expected the field `key_state` to be a primitive type in the JSON string but got " + data['key_state']);
      } // ensure the json data is a string


      if (data['key_type'] && !(typeof data['key_type'] === 'string' || data['key_type'] instanceof String)) {
        throw new Error("Expected the field `key_type` to be a primitive type in the JSON string but got " + data['key_type']);
      } // ensure the json data is a string


      if (data['last_error'] && !(typeof data['last_error'] === 'string' || data['last_error'] instanceof String)) {
        throw new Error("Expected the field `last_error` to be a primitive type in the JSON string but got " + data['last_error']);
      } // ensure the json data is a string


      if (data['public_key'] && !(typeof data['public_key'] === 'string' || data['public_key'] instanceof String)) {
        throw new Error("Expected the field `public_key` to be a primitive type in the JSON string but got " + data['public_key']);
      } // ensure the json data is a string


      if (data['target_alias_helper'] && !(typeof data['target_alias_helper'] === 'string' || data['target_alias_helper'] instanceof String)) {
        throw new Error("Expected the field `target_alias_helper` to be a primitive type in the JSON string but got " + data['target_alias_helper']);
      } // ensure the json data is an array


      if (!Array.isArray(data['target_types'])) {
        throw new Error("Expected the field `target_types` to be an array in the JSON data but got " + data['target_types']);
      }

      if (data['targets']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['targets'])) {
          throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
        } // validate the optional field `targets` (array)


        var _iterator = _createForOfIteratorHelper(data['targets']),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            _ClassicKeyTargetInfo["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      } // ensure the json data is a string


      if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
        throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
      } // ensure the json data is an array


      if (!Array.isArray(data['websites'])) {
        throw new Error("Expected the field `websites` to be an array in the JSON data but got " + data['websites']);
      }

      return true;
    }
  }]);

  return ClassicKeyDetailsInfo;
}();
/**
 * @member {Object.<String, Array.<String>>} classic_key_attributes
 */


ClassicKeyDetailsInfo.prototype['classic_key_attributes'] = undefined;
/**
 * @member {String} classic_key_id
 */

ClassicKeyDetailsInfo.prototype['classic_key_id'] = undefined;
/**
 * @member {String} credential_id
 */

ClassicKeyDetailsInfo.prototype['credential_id'] = undefined;
/**
 * @member {Number} gw_cluster_id
 */

ClassicKeyDetailsInfo.prototype['gw_cluster_id'] = undefined;
/**
 * @member {Boolean} has_certificate
 */

ClassicKeyDetailsInfo.prototype['has_certificate'] = undefined;
/**
 * @member {Boolean} is_provided_by_user
 */

ClassicKeyDetailsInfo.prototype['is_provided_by_user'] = undefined;
/**
 * @member {Boolean} is_unexportable
 */

ClassicKeyDetailsInfo.prototype['is_unexportable'] = undefined;
/**
 * ItemState defines the different states an Item can be in
 * @member {String} key_state
 */

ClassicKeyDetailsInfo.prototype['key_state'] = undefined;
/**
 * @member {String} key_type
 */

ClassicKeyDetailsInfo.prototype['key_type'] = undefined;
/**
 * @member {String} last_error
 */

ClassicKeyDetailsInfo.prototype['last_error'] = undefined;
/**
 * @member {String} public_key
 */

ClassicKeyDetailsInfo.prototype['public_key'] = undefined;
/**
 * @member {String} target_alias_helper
 */

ClassicKeyDetailsInfo.prototype['target_alias_helper'] = undefined;
/**
 * @member {Array.<String>} target_types
 */

ClassicKeyDetailsInfo.prototype['target_types'] = undefined;
/**
 * @member {Array.<module:model/ClassicKeyTargetInfo>} targets
 */

ClassicKeyDetailsInfo.prototype['targets'] = undefined;
/**
 * @member {String} username
 */

ClassicKeyDetailsInfo.prototype['username'] = undefined;
/**
 * @member {Array.<String>} websites
 */

ClassicKeyDetailsInfo.prototype['websites'] = undefined;
var _default = ClassicKeyDetailsInfo;
exports["default"] = _default;