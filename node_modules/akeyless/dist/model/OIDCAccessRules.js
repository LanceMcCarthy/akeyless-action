"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _OIDCCustomClaim = _interopRequireDefault(require("./OIDCCustomClaim"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The OIDCAccessRules model module.
 * @module model/OIDCAccessRules
 * @version 5.0.5
 */
var OIDCAccessRules = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>OIDCAccessRules</code>.
   * OIDCAccessRules contains access rules specific to Open Id Connect authentication method.
   * @alias module:model/OIDCAccessRules
   */
  function OIDCAccessRules() {
    _classCallCheck(this, OIDCAccessRules);

    OIDCAccessRules.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(OIDCAccessRules, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>OIDCAccessRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OIDCAccessRules} obj Optional instance to populate.
     * @return {module:model/OIDCAccessRules} The populated <code>OIDCAccessRules</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new OIDCAccessRules();

        if (data.hasOwnProperty('allowed_redirect_URIs')) {
          obj['allowed_redirect_URIs'] = _ApiClient["default"].convertToType(data['allowed_redirect_URIs'], ['String']);
        }

        if (data.hasOwnProperty('audience')) {
          obj['audience'] = _ApiClient["default"].convertToType(data['audience'], 'String');
        }

        if (data.hasOwnProperty('bound_claims')) {
          obj['bound_claims'] = _ApiClient["default"].convertToType(data['bound_claims'], [_OIDCCustomClaim["default"]]);
        }

        if (data.hasOwnProperty('client_id')) {
          obj['client_id'] = _ApiClient["default"].convertToType(data['client_id'], 'String');
        }

        if (data.hasOwnProperty('client_secret')) {
          obj['client_secret'] = _ApiClient["default"].convertToType(data['client_secret'], 'String');
        }

        if (data.hasOwnProperty('is_internal')) {
          obj['is_internal'] = _ApiClient["default"].convertToType(data['is_internal'], 'Boolean');
        }

        if (data.hasOwnProperty('issuer')) {
          obj['issuer'] = _ApiClient["default"].convertToType(data['issuer'], 'String');
        }

        if (data.hasOwnProperty('required_scopes')) {
          obj['required_scopes'] = _ApiClient["default"].convertToType(data['required_scopes'], ['String']);
        }

        if (data.hasOwnProperty('required_scopes_prefix')) {
          obj['required_scopes_prefix'] = _ApiClient["default"].convertToType(data['required_scopes_prefix'], 'String');
        }

        if (data.hasOwnProperty('unique_identifier')) {
          obj['unique_identifier'] = _ApiClient["default"].convertToType(data['unique_identifier'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>OIDCAccessRules</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OIDCAccessRules</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is an array
      if (!Array.isArray(data['allowed_redirect_URIs'])) {
        throw new Error("Expected the field `allowed_redirect_URIs` to be an array in the JSON data but got " + data['allowed_redirect_URIs']);
      } // ensure the json data is a string


      if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
        throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
      }

      if (data['bound_claims']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['bound_claims'])) {
          throw new Error("Expected the field `bound_claims` to be an array in the JSON data but got " + data['bound_claims']);
        } // validate the optional field `bound_claims` (array)


        var _iterator = _createForOfIteratorHelper(data['bound_claims']),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            _OIDCCustomClaim["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      } // ensure the json data is a string


      if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
        throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
      } // ensure the json data is a string


      if (data['client_secret'] && !(typeof data['client_secret'] === 'string' || data['client_secret'] instanceof String)) {
        throw new Error("Expected the field `client_secret` to be a primitive type in the JSON string but got " + data['client_secret']);
      } // ensure the json data is a string


      if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
        throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
      } // ensure the json data is an array


      if (!Array.isArray(data['required_scopes'])) {
        throw new Error("Expected the field `required_scopes` to be an array in the JSON data but got " + data['required_scopes']);
      } // ensure the json data is a string


      if (data['required_scopes_prefix'] && !(typeof data['required_scopes_prefix'] === 'string' || data['required_scopes_prefix'] instanceof String)) {
        throw new Error("Expected the field `required_scopes_prefix` to be a primitive type in the JSON string but got " + data['required_scopes_prefix']);
      } // ensure the json data is a string


      if (data['unique_identifier'] && !(typeof data['unique_identifier'] === 'string' || data['unique_identifier'] instanceof String)) {
        throw new Error("Expected the field `unique_identifier` to be a primitive type in the JSON string but got " + data['unique_identifier']);
      }

      return true;
    }
  }]);

  return OIDCAccessRules;
}();
/**
 * Allowed redirect URIs after the authentication
 * @member {Array.<String>} allowed_redirect_URIs
 */


OIDCAccessRules.prototype['allowed_redirect_URIs'] = undefined;
/**
 * Audience claim to be used as part of the authentication flow. In case set, it must match the one configured on the Identity Provider's Application
 * @member {String} audience
 */

OIDCAccessRules.prototype['audience'] = undefined;
/**
 * The claims that login is restricted to.
 * @member {Array.<module:model/OIDCCustomClaim>} bound_claims
 */

OIDCAccessRules.prototype['bound_claims'] = undefined;
/**
 * Client ID
 * @member {String} client_id
 */

OIDCAccessRules.prototype['client_id'] = undefined;
/**
 * Client Secret
 * @member {String} client_secret
 */

OIDCAccessRules.prototype['client_secret'] = undefined;
/**
 * IsInternal indicates whether this is an internal Auth Method where the client has no control over it, or it was created by the client e.g - Sign In with Google will create an OIDC Auth Method with IsInternal=true
 * @member {Boolean} is_internal
 */

OIDCAccessRules.prototype['is_internal'] = undefined;
/**
 * Issuer URL
 * @member {String} issuer
 */

OIDCAccessRules.prototype['issuer'] = undefined;
/**
 * A list of required scopes to request from the oidc provider, and to check on the token
 * @member {Array.<String>} required_scopes
 */

OIDCAccessRules.prototype['required_scopes'] = undefined;
/**
 * A prefix to add to the required scopes (for example, azures' Application ID URI)
 * @member {String} required_scopes_prefix
 */

OIDCAccessRules.prototype['required_scopes_prefix'] = undefined;
/**
 * A unique identifier to distinguish different users
 * @member {String} unique_identifier
 */

OIDCAccessRules.prototype['unique_identifier'] = undefined;
var _default = OIDCAccessRules;
exports["default"] = _default;