"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayCreateProducerGcp model module.
 * @module model/GatewayCreateProducerGcp
 * @version 3.6.2
 */
var GatewayCreateProducerGcp = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayCreateProducerGcp</code>.
   * gatewayCreateProducerGcp is a command that creates a GCP producer [Deprecated: Use dynamic-secret-create-gcp command]
   * @alias module:model/GatewayCreateProducerGcp
   * @param name {String} Dynamic secret name
   * @param serviceAccountType {String} The type of the gcp dynamic secret. Options[fixed, dynamic]
   */
  function GatewayCreateProducerGcp(name, serviceAccountType) {
    _classCallCheck(this, GatewayCreateProducerGcp);

    GatewayCreateProducerGcp.initialize(this, name, serviceAccountType);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayCreateProducerGcp, null, [{
    key: "initialize",
    value: function initialize(obj, name, serviceAccountType) {
      obj['name'] = name;
      obj['service-account-type'] = serviceAccountType;
    }
    /**
     * Constructs a <code>GatewayCreateProducerGcp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayCreateProducerGcp} obj Optional instance to populate.
     * @return {module:model/GatewayCreateProducerGcp} The populated <code>GatewayCreateProducerGcp</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayCreateProducerGcp();

        if (data.hasOwnProperty('delete_protection')) {
          obj['delete_protection'] = _ApiClient["default"].convertToType(data['delete_protection'], 'String');
        }

        if (data.hasOwnProperty('gcp-cred-type')) {
          obj['gcp-cred-type'] = _ApiClient["default"].convertToType(data['gcp-cred-type'], 'String');
        }

        if (data.hasOwnProperty('gcp-key')) {
          obj['gcp-key'] = _ApiClient["default"].convertToType(data['gcp-key'], 'String');
        }

        if (data.hasOwnProperty('gcp-key-algo')) {
          obj['gcp-key-algo'] = _ApiClient["default"].convertToType(data['gcp-key-algo'], 'String');
        }

        if (data.hasOwnProperty('gcp-sa-email')) {
          obj['gcp-sa-email'] = _ApiClient["default"].convertToType(data['gcp-sa-email'], 'String');
        }

        if (data.hasOwnProperty('gcp-token-scopes')) {
          obj['gcp-token-scopes'] = _ApiClient["default"].convertToType(data['gcp-token-scopes'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('producer-encryption-key-name')) {
          obj['producer-encryption-key-name'] = _ApiClient["default"].convertToType(data['producer-encryption-key-name'], 'String');
        }

        if (data.hasOwnProperty('role-binding')) {
          obj['role-binding'] = _ApiClient["default"].convertToType(data['role-binding'], 'String');
        }

        if (data.hasOwnProperty('service-account-type')) {
          obj['service-account-type'] = _ApiClient["default"].convertToType(data['service-account-type'], 'String');
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('user-ttl')) {
          obj['user-ttl'] = _ApiClient["default"].convertToType(data['user-ttl'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayCreateProducerGcp;
}();
/**
 * Protection from accidental deletion of this item [true/false]
 * @member {String} delete_protection
 */


GatewayCreateProducerGcp.prototype['delete_protection'] = undefined;
/**
 * @member {String} gcp-cred-type
 */

GatewayCreateProducerGcp.prototype['gcp-cred-type'] = undefined;
/**
 * Base64-encoded service account private key text
 * @member {String} gcp-key
 */

GatewayCreateProducerGcp.prototype['gcp-key'] = undefined;
/**
 * Service account key algorithm, e.g. KEY_ALG_RSA_1024
 * @member {String} gcp-key-algo
 */

GatewayCreateProducerGcp.prototype['gcp-key-algo'] = undefined;
/**
 * The email of the fixed service acocunt to generate keys or tokens for. (revelant for service-account-type=fixed)
 * @member {String} gcp-sa-email
 */

GatewayCreateProducerGcp.prototype['gcp-sa-email'] = undefined;
/**
 * Access token scopes list, e.g. scope1,scope2
 * @member {String} gcp-token-scopes
 */

GatewayCreateProducerGcp.prototype['gcp-token-scopes'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayCreateProducerGcp.prototype['json'] = false;
/**
 * Dynamic secret name
 * @member {String} name
 */

GatewayCreateProducerGcp.prototype['name'] = undefined;
/**
 * Dynamic producer encryption key
 * @member {String} producer-encryption-key-name
 */

GatewayCreateProducerGcp.prototype['producer-encryption-key-name'] = undefined;
/**
 * Role binding definitions in json format
 * @member {String} role-binding
 */

GatewayCreateProducerGcp.prototype['role-binding'] = undefined;
/**
 * The type of the gcp dynamic secret. Options[fixed, dynamic]
 * @member {String} service-account-type
 * @default 'fixed'
 */

GatewayCreateProducerGcp.prototype['service-account-type'] = 'fixed';
/**
 * Add tags attached to this object
 * @member {Array.<String>} tags
 */

GatewayCreateProducerGcp.prototype['tags'] = undefined;
/**
 * Target name
 * @member {String} target-name
 */

GatewayCreateProducerGcp.prototype['target-name'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayCreateProducerGcp.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayCreateProducerGcp.prototype['uid-token'] = undefined;
/**
 * User TTL
 * @member {String} user-ttl
 * @default '60m'
 */

GatewayCreateProducerGcp.prototype['user-ttl'] = '60m';
var _default = GatewayCreateProducerGcp;
exports["default"] = _default;