"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayDeleteSubAdmins model module.
 * @module model/GatewayDeleteSubAdmins
 * @version 2.4.2
 */
var GatewayDeleteSubAdmins = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayDeleteSubAdmins</code>.
   * gatewayDeleteSubAdmins is a command that deletes sub-admins
   * @alias module:model/GatewayDeleteSubAdmins
   * @param subAdminId {String} SubAdminID to be removed
   */
  function GatewayDeleteSubAdmins(subAdminId) {
    _classCallCheck(this, GatewayDeleteSubAdmins);

    GatewayDeleteSubAdmins.initialize(this, subAdminId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayDeleteSubAdmins, null, [{
    key: "initialize",
    value: function initialize(obj, subAdminId) {
      obj['sub-admin-id'] = subAdminId;
    }
    /**
     * Constructs a <code>GatewayDeleteSubAdmins</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayDeleteSubAdmins} obj Optional instance to populate.
     * @return {module:model/GatewayDeleteSubAdmins} The populated <code>GatewayDeleteSubAdmins</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayDeleteSubAdmins();

        if (data.hasOwnProperty('gateway-url')) {
          obj['gateway-url'] = _ApiClient["default"].convertToType(data['gateway-url'], 'String');
        }

        if (data.hasOwnProperty('password')) {
          obj['password'] = _ApiClient["default"].convertToType(data['password'], 'String');
        }

        if (data.hasOwnProperty('sub-admin-id')) {
          obj['sub-admin-id'] = _ApiClient["default"].convertToType(data['sub-admin-id'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('username')) {
          obj['username'] = _ApiClient["default"].convertToType(data['username'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayDeleteSubAdmins;
}();
/**
 * Gateway url
 * @member {String} gateway-url
 * @default 'http://localhost:8000'
 */


GatewayDeleteSubAdmins.prototype['gateway-url'] = 'http://localhost:8000';
/**
 * Required only when the authentication process requires a username and password
 * @member {String} password
 */

GatewayDeleteSubAdmins.prototype['password'] = undefined;
/**
 * SubAdminID to be removed
 * @member {String} sub-admin-id
 */

GatewayDeleteSubAdmins.prototype['sub-admin-id'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayDeleteSubAdmins.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayDeleteSubAdmins.prototype['uid-token'] = undefined;
/**
 * Required only when the authentication process requires a username and password
 * @member {String} username
 */

GatewayDeleteSubAdmins.prototype['username'] = undefined;
var _default = GatewayDeleteSubAdmins;
exports["default"] = _default;