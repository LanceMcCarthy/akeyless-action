"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The AssocTargetItem model module.
 * @module model/AssocTargetItem
 * @version 4.2.0
 */
var AssocTargetItem = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AssocTargetItem</code>.
   * assocTargetItem is a command that creates an association between target and item.
   * @alias module:model/AssocTargetItem
   * @param name {String} The item to associate
   * @param targetName {String} The target to associate
   */
  function AssocTargetItem(name, targetName) {
    _classCallCheck(this, AssocTargetItem);

    AssocTargetItem.initialize(this, name, targetName);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(AssocTargetItem, null, [{
    key: "initialize",
    value: function initialize(obj, name, targetName) {
      obj['name'] = name;
      obj['target-name'] = targetName;
    }
    /**
     * Constructs a <code>AssocTargetItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssocTargetItem} obj Optional instance to populate.
     * @return {module:model/AssocTargetItem} The populated <code>AssocTargetItem</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AssocTargetItem();

        if (data.hasOwnProperty('certificate-path')) {
          obj['certificate-path'] = _ApiClient["default"].convertToType(data['certificate-path'], 'String');
        }

        if (data.hasOwnProperty('chain-path')) {
          obj['chain-path'] = _ApiClient["default"].convertToType(data['chain-path'], 'String');
        }

        if (data.hasOwnProperty('disable-previous-key-version')) {
          obj['disable-previous-key-version'] = _ApiClient["default"].convertToType(data['disable-previous-key-version'], 'Boolean');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('key-operations')) {
          obj['key-operations'] = _ApiClient["default"].convertToType(data['key-operations'], ['String']);
        }

        if (data.hasOwnProperty('keyring-name')) {
          obj['keyring-name'] = _ApiClient["default"].convertToType(data['keyring-name'], 'String');
        }

        if (data.hasOwnProperty('kms-algorithm')) {
          obj['kms-algorithm'] = _ApiClient["default"].convertToType(data['kms-algorithm'], 'String');
        }

        if (data.hasOwnProperty('location-id')) {
          obj['location-id'] = _ApiClient["default"].convertToType(data['location-id'], 'String');
        }

        if (data.hasOwnProperty('multi-region')) {
          obj['multi-region'] = _ApiClient["default"].convertToType(data['multi-region'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('post-provision-command')) {
          obj['post-provision-command'] = _ApiClient["default"].convertToType(data['post-provision-command'], 'String');
        }

        if (data.hasOwnProperty('private-key-path')) {
          obj['private-key-path'] = _ApiClient["default"].convertToType(data['private-key-path'], 'String');
        }

        if (data.hasOwnProperty('project-id')) {
          obj['project-id'] = _ApiClient["default"].convertToType(data['project-id'], 'String');
        }

        if (data.hasOwnProperty('protection-level')) {
          obj['protection-level'] = _ApiClient["default"].convertToType(data['protection-level'], 'String');
        }

        if (data.hasOwnProperty('purpose')) {
          obj['purpose'] = _ApiClient["default"].convertToType(data['purpose'], 'String');
        }

        if (data.hasOwnProperty('regions')) {
          obj['regions'] = _ApiClient["default"].convertToType(data['regions'], ['String']);
        }

        if (data.hasOwnProperty('sra-association')) {
          obj['sra-association'] = _ApiClient["default"].convertToType(data['sra-association'], 'Boolean');
        }

        if (data.hasOwnProperty('target-name')) {
          obj['target-name'] = _ApiClient["default"].convertToType(data['target-name'], 'String');
        }

        if (data.hasOwnProperty('tenant-secret-type')) {
          obj['tenant-secret-type'] = _ApiClient["default"].convertToType(data['tenant-secret-type'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('vault-name')) {
          obj['vault-name'] = _ApiClient["default"].convertToType(data['vault-name'], 'String');
        }
      }

      return obj;
    }
  }]);

  return AssocTargetItem;
}();
/**
 * A path on the target to store the certificate pem file (relevant only for certificate provisioning)
 * @member {String} certificate-path
 */


AssocTargetItem.prototype['certificate-path'] = undefined;
/**
 * A path on the target to store the full chain pem file (relevant only for certificate provisioning)
 * @member {String} chain-path
 */

AssocTargetItem.prototype['chain-path'] = undefined;
/**
 * Automatically disable previous key version (required for azure targets)
 * @member {Boolean} disable-previous-key-version
 * @default false
 */

AssocTargetItem.prototype['disable-previous-key-version'] = false;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

AssocTargetItem.prototype['json'] = false;
/**
 * A list of allowed operations for the key (required for azure targets)
 * @member {Array.<String>} key-operations
 */

AssocTargetItem.prototype['key-operations'] = undefined;
/**
 * Keyring name of the GCP KMS (required for gcp targets)
 * @member {String} keyring-name
 */

AssocTargetItem.prototype['keyring-name'] = undefined;
/**
 * Algorithm of the key in GCP KMS (required for gcp targets)
 * @member {String} kms-algorithm
 */

AssocTargetItem.prototype['kms-algorithm'] = undefined;
/**
 * Location id of the GCP KMS (required for gcp targets)
 * @member {String} location-id
 */

AssocTargetItem.prototype['location-id'] = undefined;
/**
 * Set to 'true' to create a multi-region managed key. (Relevant only for Classic Key AWS targets)
 * @member {String} multi-region
 * @default 'false'
 */

AssocTargetItem.prototype['multi-region'] = 'false';
/**
 * The item to associate
 * @member {String} name
 */

AssocTargetItem.prototype['name'] = undefined;
/**
 * A custom command to run on the remote target after successful provisioning (relevant only for certificate provisioning)
 * @member {String} post-provision-command
 */

AssocTargetItem.prototype['post-provision-command'] = undefined;
/**
 * A path on the target to store the private key (relevant only for certificate provisioning)
 * @member {String} private-key-path
 */

AssocTargetItem.prototype['private-key-path'] = undefined;
/**
 * Project id of the GCP KMS (required for gcp targets)
 * @member {String} project-id
 */

AssocTargetItem.prototype['project-id'] = undefined;
/**
 * Protection level of the key [software/hardware] (relevant for gcp targets)
 * @member {String} protection-level
 * @default 'software'
 */

AssocTargetItem.prototype['protection-level'] = 'software';
/**
 * Purpose of the key in GCP KMS (required for gcp targets)
 * @member {String} purpose
 */

AssocTargetItem.prototype['purpose'] = undefined;
/**
 * The list of regions to create a copy of the key in (relevant for aws targets)
 * @member {Array.<String>} regions
 */

AssocTargetItem.prototype['regions'] = undefined;
/**
 * Is the target to associate is for sra, relevant only for linked target association for ldap rotated secret
 * @member {Boolean} sra-association
 * @default false
 */

AssocTargetItem.prototype['sra-association'] = false;
/**
 * The target to associate
 * @member {String} target-name
 */

AssocTargetItem.prototype['target-name'] = undefined;
/**
 * The tenant secret type [Data/SearchIndex/Analytics] (required for salesforce targets)
 * @member {String} tenant-secret-type
 */

AssocTargetItem.prototype['tenant-secret-type'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

AssocTargetItem.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

AssocTargetItem.prototype['uid-token'] = undefined;
/**
 * Name of the vault used (required for azure targets)
 * @member {String} vault-name
 */

AssocTargetItem.prototype['vault-name'] = undefined;
var _default = AssocTargetItem;
exports["default"] = _default;