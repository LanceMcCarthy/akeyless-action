"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ShareItem model module.
 * @module model/ShareItem
 * @version 4.2.0
 */
var ShareItem = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ShareItem</code>.
   * @alias module:model/ShareItem
   * @param action {String} Action to be performed on the item [start/stop/describe]
   * @param itemName {String} Item name
   */
  function ShareItem(action, itemName) {
    _classCallCheck(this, ShareItem);

    ShareItem.initialize(this, action, itemName);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ShareItem, null, [{
    key: "initialize",
    value: function initialize(obj, action, itemName) {
      obj['action'] = action;
      obj['item-name'] = itemName;
    }
    /**
     * Constructs a <code>ShareItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareItem} obj Optional instance to populate.
     * @return {module:model/ShareItem} The populated <code>ShareItem</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ShareItem();

        if (data.hasOwnProperty('accessibility')) {
          obj['accessibility'] = _ApiClient["default"].convertToType(data['accessibility'], 'String');
        }

        if (data.hasOwnProperty('action')) {
          obj['action'] = _ApiClient["default"].convertToType(data['action'], 'String');
        }

        if (data.hasOwnProperty('emails')) {
          obj['emails'] = _ApiClient["default"].convertToType(data['emails'], ['String']);
        }

        if (data.hasOwnProperty('item-name')) {
          obj['item-name'] = _ApiClient["default"].convertToType(data['item-name'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('ttl')) {
          obj['ttl'] = _ApiClient["default"].convertToType(data['ttl'], 'Number');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }

        if (data.hasOwnProperty('view-once')) {
          obj['view-once'] = _ApiClient["default"].convertToType(data['view-once'], 'Boolean');
        }
      }

      return obj;
    }
  }]);

  return ShareItem;
}();
/**
 * for personal password manager
 * @member {String} accessibility
 * @default 'regular'
 */


ShareItem.prototype['accessibility'] = 'regular';
/**
 * Action to be performed on the item [start/stop/describe]
 * @member {String} action
 */

ShareItem.prototype['action'] = undefined;
/**
 * For Password Management use, reflect the website context
 * @member {Array.<String>} emails
 */

ShareItem.prototype['emails'] = undefined;
/**
 * Item name
 * @member {String} item-name
 */

ShareItem.prototype['item-name'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

ShareItem.prototype['json'] = false;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

ShareItem.prototype['token'] = undefined;
/**
 * TTL of the Availability of the shared secret in seconds
 * @member {Number} ttl
 */

ShareItem.prototype['ttl'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

ShareItem.prototype['uid-token'] = undefined;
/**
 * ViewOnlyOnce Shared secrets can only be viewed once [true/false]
 * @member {Boolean} view-once
 * @default false
 */

ShareItem.prototype['view-once'] = false;
var _default = ShareItem;
exports["default"] = _default;