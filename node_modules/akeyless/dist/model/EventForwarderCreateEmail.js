"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The EventForwarderCreateEmail model module.
 * @module model/EventForwarderCreateEmail
 * @version 5.0.1
 */
var EventForwarderCreateEmail = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>EventForwarderCreateEmail</code>.
   * eventForwarderCreateEmail is a command that creates email event forwarder
   * @alias module:model/EventForwarderCreateEmail
   * @param gatewaysEventSourceLocations {Array.<String>} Event sources
   * @param name {String} EventForwarder name
   * @param runnerType {String} 
   */
  function EventForwarderCreateEmail(gatewaysEventSourceLocations, name, runnerType) {
    _classCallCheck(this, EventForwarderCreateEmail);

    EventForwarderCreateEmail.initialize(this, gatewaysEventSourceLocations, name, runnerType);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(EventForwarderCreateEmail, null, [{
    key: "initialize",
    value: function initialize(obj, gatewaysEventSourceLocations, name, runnerType) {
      obj['gateways-event-source-locations'] = gatewaysEventSourceLocations;
      obj['json'] = false;
      obj['name'] = name;
      obj['runner-type'] = runnerType;
    }
    /**
     * Constructs a <code>EventForwarderCreateEmail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventForwarderCreateEmail} obj Optional instance to populate.
     * @return {module:model/EventForwarderCreateEmail} The populated <code>EventForwarderCreateEmail</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new EventForwarderCreateEmail();

        if (data.hasOwnProperty('auth-methods-event-source-locations')) {
          obj['auth-methods-event-source-locations'] = _ApiClient["default"].convertToType(data['auth-methods-event-source-locations'], ['String']);
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('email-to')) {
          obj['email-to'] = _ApiClient["default"].convertToType(data['email-to'], 'String');
        }

        if (data.hasOwnProperty('event-types')) {
          obj['event-types'] = _ApiClient["default"].convertToType(data['event-types'], ['String']);
        }

        if (data.hasOwnProperty('every')) {
          obj['every'] = _ApiClient["default"].convertToType(data['every'], 'String');
        }

        if (data.hasOwnProperty('gateways-event-source-locations')) {
          obj['gateways-event-source-locations'] = _ApiClient["default"].convertToType(data['gateways-event-source-locations'], ['String']);
        }

        if (data.hasOwnProperty('include-error')) {
          obj['include-error'] = _ApiClient["default"].convertToType(data['include-error'], 'String');
        }

        if (data.hasOwnProperty('items-event-source-locations')) {
          obj['items-event-source-locations'] = _ApiClient["default"].convertToType(data['items-event-source-locations'], ['String']);
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('override-url')) {
          obj['override-url'] = _ApiClient["default"].convertToType(data['override-url'], 'String');
        }

        if (data.hasOwnProperty('runner-type')) {
          obj['runner-type'] = _ApiClient["default"].convertToType(data['runner-type'], 'String');
        }

        if (data.hasOwnProperty('targets-event-source-locations')) {
          obj['targets-event-source-locations'] = _ApiClient["default"].convertToType(data['targets-event-source-locations'], ['String']);
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>EventForwarderCreateEmail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventForwarderCreateEmail</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(EventForwarderCreateEmail.RequiredProperties),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;

          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        } // ensure the json data is an array

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (!Array.isArray(data['auth-methods-event-source-locations'])) {
        throw new Error("Expected the field `auth-methods-event-source-locations` to be an array in the JSON data but got " + data['auth-methods-event-source-locations']);
      } // ensure the json data is a string


      if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
        throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
      } // ensure the json data is a string


      if (data['email-to'] && !(typeof data['email-to'] === 'string' || data['email-to'] instanceof String)) {
        throw new Error("Expected the field `email-to` to be a primitive type in the JSON string but got " + data['email-to']);
      } // ensure the json data is an array


      if (!Array.isArray(data['event-types'])) {
        throw new Error("Expected the field `event-types` to be an array in the JSON data but got " + data['event-types']);
      } // ensure the json data is a string


      if (data['every'] && !(typeof data['every'] === 'string' || data['every'] instanceof String)) {
        throw new Error("Expected the field `every` to be a primitive type in the JSON string but got " + data['every']);
      } // ensure the json data is an array


      if (!Array.isArray(data['gateways-event-source-locations'])) {
        throw new Error("Expected the field `gateways-event-source-locations` to be an array in the JSON data but got " + data['gateways-event-source-locations']);
      } // ensure the json data is a string


      if (data['include-error'] && !(typeof data['include-error'] === 'string' || data['include-error'] instanceof String)) {
        throw new Error("Expected the field `include-error` to be a primitive type in the JSON string but got " + data['include-error']);
      } // ensure the json data is an array


      if (!Array.isArray(data['items-event-source-locations'])) {
        throw new Error("Expected the field `items-event-source-locations` to be an array in the JSON data but got " + data['items-event-source-locations']);
      } // ensure the json data is a string


      if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
        throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
      } // ensure the json data is a string


      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      } // ensure the json data is a string


      if (data['override-url'] && !(typeof data['override-url'] === 'string' || data['override-url'] instanceof String)) {
        throw new Error("Expected the field `override-url` to be a primitive type in the JSON string but got " + data['override-url']);
      } // ensure the json data is a string


      if (data['runner-type'] && !(typeof data['runner-type'] === 'string' || data['runner-type'] instanceof String)) {
        throw new Error("Expected the field `runner-type` to be a primitive type in the JSON string but got " + data['runner-type']);
      } // ensure the json data is an array


      if (!Array.isArray(data['targets-event-source-locations'])) {
        throw new Error("Expected the field `targets-event-source-locations` to be an array in the JSON data but got " + data['targets-event-source-locations']);
      } // ensure the json data is a string


      if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
        throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
      } // ensure the json data is a string


      if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
        throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
      }

      return true;
    }
  }]);

  return EventForwarderCreateEmail;
}();

EventForwarderCreateEmail.RequiredProperties = ["gateways-event-source-locations", "name", "runner-type"];
/**
 * Auth Method Event sources
 * @member {Array.<String>} auth-methods-event-source-locations
 */

EventForwarderCreateEmail.prototype['auth-methods-event-source-locations'] = undefined;
/**
 * Description of the object
 * @member {String} description
 */

EventForwarderCreateEmail.prototype['description'] = undefined;
/**
 * A comma seperated list of email addresses to send event to
 * @member {String} email-to
 */

EventForwarderCreateEmail.prototype['email-to'] = undefined;
/**
 * List of event types to notify about [request-access, certificate-pending-expiration, certificate-expired, certificate-provisioning-success, certificate-provisioning-failure, auth-method-pending-expiration, auth-method-expired, next-automatic-rotation, rotated-secret-success, rotated-secret-failure, dynamic-secret-failure, multi-auth-failure, uid-rotation-failure, apply-justification, email-auth-method-approved, usage, rotation-usage, gateway-inactive, static-secret-updated, rate-limiting, usage-report, secret-sync]
 * @member {Array.<String>} event-types
 */

EventForwarderCreateEmail.prototype['event-types'] = undefined;
/**
 * Rate of periodic runner repetition in hours
 * @member {String} every
 */

EventForwarderCreateEmail.prototype['every'] = undefined;
/**
 * Event sources
 * @member {Array.<String>} gateways-event-source-locations
 */

EventForwarderCreateEmail.prototype['gateways-event-source-locations'] = undefined;
/**
 * Set this option to include event errors details [true/false]
 * @member {String} include-error
 */

EventForwarderCreateEmail.prototype['include-error'] = undefined;
/**
 * Items Event sources
 * @member {Array.<String>} items-event-source-locations
 */

EventForwarderCreateEmail.prototype['items-event-source-locations'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

EventForwarderCreateEmail.prototype['json'] = false;
/**
 * The name of a key that used to encrypt the EventForwarder secret value (if empty, the account default protectionKey key will be used)
 * @member {String} key
 */

EventForwarderCreateEmail.prototype['key'] = undefined;
/**
 * EventForwarder name
 * @member {String} name
 */

EventForwarderCreateEmail.prototype['name'] = undefined;
/**
 * Override Akeyless default URL with your Gateway url (port 18888)
 * @member {String} override-url
 */

EventForwarderCreateEmail.prototype['override-url'] = undefined;
/**
 * @member {String} runner-type
 */

EventForwarderCreateEmail.prototype['runner-type'] = undefined;
/**
 * Targets Event sources
 * @member {Array.<String>} targets-event-source-locations
 */

EventForwarderCreateEmail.prototype['targets-event-source-locations'] = undefined;
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

EventForwarderCreateEmail.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

EventForwarderCreateEmail.prototype['uid-token'] = undefined;
var _default = EventForwarderCreateEmail;
exports["default"] = _default;