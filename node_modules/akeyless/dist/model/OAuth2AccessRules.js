"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _OAuth2CustomClaim = _interopRequireDefault(require("./OAuth2CustomClaim"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The OAuth2AccessRules model module.
 * @module model/OAuth2AccessRules
 * @version 3.5.1
 */
var OAuth2AccessRules = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>OAuth2AccessRules</code>.
   * OAuth2AccessRules contains access rules specific to OAuth2 authentication method.
   * @alias module:model/OAuth2AccessRules
   */
  function OAuth2AccessRules() {
    _classCallCheck(this, OAuth2AccessRules);

    OAuth2AccessRules.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(OAuth2AccessRules, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>OAuth2AccessRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OAuth2AccessRules} obj Optional instance to populate.
     * @return {module:model/OAuth2AccessRules} The populated <code>OAuth2AccessRules</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new OAuth2AccessRules();

        if (data.hasOwnProperty('audience')) {
          obj['audience'] = _ApiClient["default"].convertToType(data['audience'], 'String');
        }

        if (data.hasOwnProperty('authorized_gw_cluster_name')) {
          obj['authorized_gw_cluster_name'] = _ApiClient["default"].convertToType(data['authorized_gw_cluster_name'], 'String');
        }

        if (data.hasOwnProperty('bound_claims')) {
          obj['bound_claims'] = _ApiClient["default"].convertToType(data['bound_claims'], [_OAuth2CustomClaim["default"]]);
        }

        if (data.hasOwnProperty('bound_clients_id')) {
          obj['bound_clients_id'] = _ApiClient["default"].convertToType(data['bound_clients_id'], ['String']);
        }

        if (data.hasOwnProperty('issuer')) {
          obj['issuer'] = _ApiClient["default"].convertToType(data['issuer'], 'String');
        }

        if (data.hasOwnProperty('jwks_json_data')) {
          obj['jwks_json_data'] = _ApiClient["default"].convertToType(data['jwks_json_data'], 'String');
        }

        if (data.hasOwnProperty('jwks_uri')) {
          obj['jwks_uri'] = _ApiClient["default"].convertToType(data['jwks_uri'], 'String');
        }

        if (data.hasOwnProperty('unique_identifier')) {
          obj['unique_identifier'] = _ApiClient["default"].convertToType(data['unique_identifier'], 'String');
        }
      }

      return obj;
    }
  }]);

  return OAuth2AccessRules;
}();
/**
 * The audience in the JWT.
 * @member {String} audience
 */


OAuth2AccessRules.prototype['audience'] = undefined;
/**
 * The gateway cluster name that is authorized to access JWKeySetURL
 * @member {String} authorized_gw_cluster_name
 */

OAuth2AccessRules.prototype['authorized_gw_cluster_name'] = undefined;
/**
 * The claims that login is restricted to.
 * @member {Array.<module:model/OAuth2CustomClaim>} bound_claims
 */

OAuth2AccessRules.prototype['bound_claims'] = undefined;
/**
 * The clients ids that login is restricted to.
 * @member {Array.<String>} bound_clients_id
 */

OAuth2AccessRules.prototype['bound_clients_id'] = undefined;
/**
 * Issuer URL
 * @member {String} issuer
 */

OAuth2AccessRules.prototype['issuer'] = undefined;
/**
 * The JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. base64 encoded string
 * @member {String} jwks_json_data
 */

OAuth2AccessRules.prototype['jwks_json_data'] = undefined;
/**
 * The URL to the JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server.
 * @member {String} jwks_uri
 */

OAuth2AccessRules.prototype['jwks_uri'] = undefined;
/**
 * A unique identifier to distinguish different users
 * @member {String} unique_identifier
 */

OAuth2AccessRules.prototype['unique_identifier'] = undefined;
var _default = OAuth2AccessRules;
exports["default"] = _default;