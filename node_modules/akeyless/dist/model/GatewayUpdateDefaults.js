"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The GatewayUpdateDefaults model module.
 * @module model/GatewayUpdateDefaults
 * @version 4.2.1
 */
var GatewayUpdateDefaults = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GatewayUpdateDefaults</code>.
   * gatewayUpdateDefaults is a command that updates defaults settings
   * @alias module:model/GatewayUpdateDefaults
   */
  function GatewayUpdateDefaults() {
    _classCallCheck(this, GatewayUpdateDefaults);

    GatewayUpdateDefaults.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(GatewayUpdateDefaults, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>GatewayUpdateDefaults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayUpdateDefaults} obj Optional instance to populate.
     * @return {module:model/GatewayUpdateDefaults} The populated <code>GatewayUpdateDefaults</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GatewayUpdateDefaults();

        if (data.hasOwnProperty('cert-access-id')) {
          obj['cert-access-id'] = _ApiClient["default"].convertToType(data['cert-access-id'], 'String');
        }

        if (data.hasOwnProperty('event-on-status-change')) {
          obj['event-on-status-change'] = _ApiClient["default"].convertToType(data['event-on-status-change'], 'String');
        }

        if (data.hasOwnProperty('json')) {
          obj['json'] = _ApiClient["default"].convertToType(data['json'], 'Boolean');
        }

        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
        }

        if (data.hasOwnProperty('oidc-access-id')) {
          obj['oidc-access-id'] = _ApiClient["default"].convertToType(data['oidc-access-id'], 'String');
        }

        if (data.hasOwnProperty('saml-access-id')) {
          obj['saml-access-id'] = _ApiClient["default"].convertToType(data['saml-access-id'], 'String');
        }

        if (data.hasOwnProperty('token')) {
          obj['token'] = _ApiClient["default"].convertToType(data['token'], 'String');
        }

        if (data.hasOwnProperty('uid-token')) {
          obj['uid-token'] = _ApiClient["default"].convertToType(data['uid-token'], 'String');
        }
      }

      return obj;
    }
  }]);

  return GatewayUpdateDefaults;
}();
/**
 * Default Certificate access id for UI login
 * @member {String} cert-access-id
 * @default 'use-existing'
 */


GatewayUpdateDefaults.prototype['cert-access-id'] = 'use-existing';
/**
 * Trigger an event when Gateway status is changed [true/false]
 * @member {String} event-on-status-change
 */

GatewayUpdateDefaults.prototype['event-on-status-change'] = undefined;
/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */

GatewayUpdateDefaults.prototype['json'] = false;
/**
 * The name of the gateway default encryption key
 * @member {String} key
 * @default 'Default'
 */

GatewayUpdateDefaults.prototype['key'] = 'Default';
/**
 * Default OIDC access id for UI login
 * @member {String} oidc-access-id
 * @default 'use-existing'
 */

GatewayUpdateDefaults.prototype['oidc-access-id'] = 'use-existing';
/**
 * Default SAML access id for UI login
 * @member {String} saml-access-id
 * @default 'use-existing'
 */

GatewayUpdateDefaults.prototype['saml-access-id'] = 'use-existing';
/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */

GatewayUpdateDefaults.prototype['token'] = undefined;
/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */

GatewayUpdateDefaults.prototype['uid-token'] = undefined;
var _default = GatewayUpdateDefaults;
exports["default"] = _default;